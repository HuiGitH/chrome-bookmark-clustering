(lp0
S'http://supervisord.org/api.html#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getPID'
p1
aS'XML-RPC API Documentation \xe2\x80\x94 Supervisor 3.3.0 documentation'
p2
aI0
aV\u000a\u000a<!DOCTYPE html>\u000a<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->\u000a<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->\u000a<head>\u000a  <meta charset="utf-8">\u000a  \u000a  <meta name="viewport" content="width=device-width, initial-scale=1.0">\u000a  \u000a  <title>XML-RPC API Documentation &mdash; Supervisor 3.3.1 documentation</title>\u000a  \u000a\u000a  \u000a  \u000a\u000a  \u000a\u000a  \u000a  \u000a    \u000a\u000a  \u000a\u000a  \u000a  \u000a    <link rel="stylesheet" href="_static/css/theme.css" type="text/css" />\u000a  \u000a\u000a  \u000a\u000a  \u000a    <link rel="top" title="Supervisor 3.3.1 documentation" href="index.html"/>\u000a        <link rel="next" title="Third Party Applications and Libraries" href="plugins.html"/>\u000a        <link rel="prev" title="Glossary" href="glossary.html"/> \u000a\u000a  \u000a  <script src="_static/js/modernizr.min.js"></script>\u000a\u000a</head>\u000a\u000a<body class="wy-body-for-nav" role="document">\u000a\u000a  <div class="wy-grid-for-nav">\u000a\u000a    \u000a    <nav data-toggle="wy-nav-shift" class="wy-nav-side">\u000a      <div class="wy-side-scroll">\u000a        <div class="wy-side-nav-search">\u000a          \u000a\u000a          \u000a            <a href="index.html" class="icon icon-home"> Supervisor\u000a          \u000a\u000a          \u000a          </a>\u000a\u000a          \u000a            \u000a            \u000a              <div class="version">\u000a                3.3.1\u000a              </div>\u000a            \u000a          \u000a\u000a          \u000a<div role="search">\u000a  <form id="rtd-search-form" class="wy-form" action="search.html" method="get">\u000a    <input type="text" name="q" placeholder="Search docs" />\u000a    <input type="hidden" name="check_keywords" value="yes" />\u000a    <input type="hidden" name="area" value="default" />\u000a  </form>\u000a</div>\u000a\u000a          \u000a        </div>\u000a\u000a        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">\u000a          \u000a            \u000a            \u000a                <ul>\u000a<li class="toctree-l1"><a class="reference internal" href="introduction.html">Introduction</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="installing.html">Installing</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="running.html">Running Supervisor</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="configuration.html">Configuration File</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="subprocess.html">Subprocesses</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="logging.html">Logging</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="events.html">Events</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="xmlrpc.html">Extending Supervisor&#8217;s XML-RPC API</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="upgrading.html">Upgrading Supervisor 2 to 3</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="faq.html">Frequently Asked Questions</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="development.html">Resources and Development</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="glossary.html">Glossary</a></li>\u000a</ul>\u000a<ul class="current">\u000a<li class="toctree-l1 current"><a class="current reference internal" href="">XML-RPC API Documentation</a><ul>\u000a<li class="toctree-l2"><a class="reference internal" href="#status-and-control">Status and Control</a></li>\u000a<li class="toctree-l2"><a class="reference internal" href="#process-control">Process Control</a></li>\u000a<li class="toctree-l2"><a class="reference internal" href="#process-logging">Process Logging</a></li>\u000a<li class="toctree-l2"><a class="reference internal" href="#system-methods">System Methods</a></li>\u000a</ul>\u000a</li>\u000a</ul>\u000a<ul>\u000a<li class="toctree-l1"><a class="reference internal" href="plugins.html">Third Party Applications and Libraries</a></li>\u000a</ul>\u000a<ul>\u000a<li class="toctree-l1"><a class="reference internal" href="changes.html">Changelog</a></li>\u000a</ul>\u000a\u000a            \u000a          \u000a        </div>\u000a      </div>\u000a    </nav>\u000a\u000a    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">\u000a\u000a      \u000a      <nav class="wy-nav-top" role="navigation" aria-label="top navigation">\u000a        <i data-toggle="wy-nav-top" class="fa fa-bars"></i>\u000a        <a href="index.html">Supervisor</a>\u000a      </nav>\u000a\u000a\u000a      \u000a      <div class="wy-nav-content">\u000a        <div class="rst-content">\u000a          \u000a\u000a\u000a\u000a\u000a\u000a<div role="navigation" aria-label="breadcrumbs navigation">\u000a  <ul class="wy-breadcrumbs">\u000a    <li><a href="index.html">Docs</a> &raquo;</li>\u000a      \u000a    <li>XML-RPC API Documentation</li>\u000a      <li class="wy-breadcrumbs-aside">\u000a        \u000a          \u000a            <a href="_sources/api.txt" rel="nofollow"> View page source</a>\u000a          \u000a        \u000a      </li>\u000a  </ul>\u000a  <hr/>\u000a</div>\u000a          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">\u000a           <div itemprop="articleBody">\u000a            \u000a  <div class="section" id="xml-rpc-api-documentation">\u000a<span id="xml-rpc"></span><h1>XML-RPC API Documentation<a class="headerlink" href="#xml-rpc-api-documentation" title="Permalink to this headline">¶</a></h1>\u000a<p>To use the XML-RPC interface, connect to supervisor&#8217;s HTTP port\u000awith any XML-RPC client library and run commands against it.  An\u000aexample of doing this using Python&#8217;s <tt class="docutils literal"><span class="pre">xmlrpclib</span></tt> client library\u000ais as follows.</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">xmlrpclib</span>\u000a<span class="n">server</span> <span class="o">=</span> <span class="n">xmlrpclib</span><span class="o">.</span><span class="n">Server</span><span class="p">(</span><span class="s">&#39;http://localhost:9001/RPC2&#39;</span><span class="p">)</span>\u000a</pre></div>\u000a</div>\u000a<p>You may call methods against <strong class="program">supervisord</strong> and its\u000asubprocesses by using the <tt class="docutils literal"><span class="pre">supervisor</span></tt> namespace.  An example is\u000aprovided below.</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span class="n">server</span><span class="o">.</span><span class="n">supervisor</span><span class="o">.</span><span class="n">getState</span><span class="p">()</span>\u000a</pre></div>\u000a</div>\u000a<p>You can get a list of methods supported by the\u000a<strong class="program">supervisord</strong> XML-RPC interface by using the XML-RPC\u000a<tt class="docutils literal"><span class="pre">system.listMethods</span></tt> API:</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span class="n">server</span><span class="o">.</span><span class="n">system</span><span class="o">.</span><span class="n">listMethods</span><span class="p">()</span>\u000a</pre></div>\u000a</div>\u000a<p>You can see help on a method by using the <tt class="docutils literal"><span class="pre">system.methodHelp</span></tt> API\u000aagainst the method:</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span class="n">server</span><span class="o">.</span><span class="n">system</span><span class="o">.</span><span class="n">methodHelp</span><span class="p">(</span><span class="s">&#39;supervisor.shutdown&#39;</span><span class="p">)</span>\u000a</pre></div>\u000a</div>\u000a<p>The <strong class="program">supervisord</strong> XML-RPC interface also supports the\u000a<a class="reference external" href="http://web.archive.org/web/20060824100531/http://www.xmlrpc.com/discuss/msgReader$1208">XML-RPC multicall API</a>.</p>\u000a<p>You can extend <strong class="program">supervisord</strong> functionality with new XML-RPC\u000aAPI methods by adding new top-level RPC interfaces as necessary.\u000aSee <a class="reference internal" href="xmlrpc.html#rpcinterface-factories"><em>Configuring XML-RPC Interface Factories</em></a>.</p>\u000a<div class="admonition note">\u000a<p class="first admonition-title">Note</p>\u000a<p class="last">Any XML-RPC method call may result in a fault response.  This includes errors caused\u000aby the client such as bad arguments, and any errors that make <strong class="program">supervisord</strong>\u000aunable to fulfill the request.  Many XML-RPC client programs will raise an exception\u000awhen a fault response is encountered.</p>\u000a</div>\u000a<span class="target" id="module-supervisor.rpcinterface"></span><div class="section" id="status-and-control">\u000a<h2>Status and Control<a class="headerlink" href="#status-and-control" title="Permalink to this headline">¶</a></h2>\u000a<blockquote>\u000a<div><dl class="class">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface">\u000a<em class="property">class </em><tt class="descclassname">supervisor.rpcinterface.</tt><tt class="descname">SupervisorNamespaceRPCInterface</tt><big>(</big><em>supervisord</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface" title="Permalink to this definition">¶</a></dt>\u000a<dd><dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getAPIVersion">\u000a<tt class="descname">getAPIVersion</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getAPIVersion" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return the version of the RPC API used by supervisord</p>\u000a<p>&#64;return string version version id</p>\u000a<p>This API is versioned separately from Supervisor itself. The API version\u000areturned by <tt class="docutils literal"><span class="pre">getAPIVersion</span></tt> only changes when the API changes. Its purpose\u000ais to help the client identify with which version of the Supervisor API it\u000ais communicating.</p>\u000a<p>When writing software that communicates with this API, it is highly\u000arecommended that you first test the API version for compatibility before\u000amaking method calls.</p>\u000a<div class="admonition note">\u000a<p class="first admonition-title">Note</p>\u000a<p class="last">The <tt class="docutils literal"><span class="pre">getAPIVersion</span></tt> method replaces <tt class="docutils literal"><span class="pre">getVersion</span></tt> found in Supervisor\u000aversions prior to 3.0a1. It is aliased for compatibility but getVersion()\u000ais deprecated and support will be dropped from Supervisor in a future\u000aversion.</p>\u000a</div>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getSupervisorVersion">\u000a<tt class="descname">getSupervisorVersion</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getSupervisorVersion" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return the version of the supervisor package in use by supervisord</p>\u000a<p>&#64;return string version version id</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getIdentification">\u000a<tt class="descname">getIdentification</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getIdentification" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return identifying string of supervisord</p>\u000a<p>&#64;return string identifier identifying string</p>\u000a<p>This method allows the client to identify with which Supervisor\u000ainstance it is communicating in the case of environments where\u000amultiple Supervisors may be running.</p>\u000a<p>The identification is a string that must be set in Supervisor\u2019s\u000aconfiguration file. This method simply returns that value back to the\u000aclient.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getState">\u000a<tt class="descname">getState</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getState" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return current state of supervisord as a struct</p>\u000a<p>&#64;return struct A struct with keys int statecode, string statename</p>\u000a<p>This is an internal value maintained by Supervisor that determines what\u000aSupervisor believes to be its current operational state.</p>\u000a<p>Some method calls can alter the current state of the Supervisor. For\u000aexample, calling the method supervisor.shutdown() while the station is\u000ain the RUNNING state places the Supervisor in the SHUTDOWN state while\u000ait is shutting down.</p>\u000a<p>The supervisor.getState() method provides a means for the client to check\u000aSupervisor&#8217;s state, both for informational purposes and to ensure that the\u000amethods it intends to call will be permitted.</p>\u000a<p>The return value is a struct:</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span><span class="s">&#39;statecode&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>\u000a <span class="s">&#39;statename&#39;</span><span class="p">:</span> <span class="s">&#39;RUNNING&#39;</span><span class="p">}</span>\u000a</pre></div>\u000a</div>\u000a<p>The possible return values are:</p>\u000a<table border="1" class="docutils">\u000a<colgroup>\u000a<col width="14%" />\u000a<col width="15%" />\u000a<col width="71%" />\u000a</colgroup>\u000a<thead valign="bottom">\u000a<tr class="row-odd"><th class="head">statecode</th>\u000a<th class="head">statename</th>\u000a<th class="head">Description</th>\u000a</tr>\u000a</thead>\u000a<tbody valign="top">\u000a<tr class="row-even"><td>2</td>\u000a<td>FATAL</td>\u000a<td>Supervisor has experienced a serious error.</td>\u000a</tr>\u000a<tr class="row-odd"><td>1</td>\u000a<td>RUNNING</td>\u000a<td>Supervisor is working normally.</td>\u000a</tr>\u000a<tr class="row-even"><td>0</td>\u000a<td>RESTARTING</td>\u000a<td>Supervisor is in the process of restarting.</td>\u000a</tr>\u000a<tr class="row-odd"><td>-1</td>\u000a<td>SHUTDOWN</td>\u000a<td>Supervisor is in the process of shutting down.</td>\u000a</tr>\u000a</tbody>\u000a</table>\u000a<p>The <tt class="docutils literal"><span class="pre">FATAL</span></tt> state reports unrecoverable errors, such as internal\u000aerrors inside Supervisor or system runaway conditions. Once set to\u000a<tt class="docutils literal"><span class="pre">FATAL</span></tt>, the Supervisor can never return to any other state without\u000abeing restarted.</p>\u000a<p>In the <tt class="docutils literal"><span class="pre">FATAL</span></tt> state, all future methods except\u000asupervisor.shutdown() and supervisor.restart() will automatically fail\u000awithout being called and the fault <tt class="docutils literal"><span class="pre">FATAL_STATE</span></tt> will be raised.</p>\u000a<p>In the <tt class="docutils literal"><span class="pre">SHUTDOWN</span></tt> or <tt class="docutils literal"><span class="pre">RESTARTING</span></tt> states, all method calls are\u000aignored and their possible return values are undefined.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getPID">\u000a<tt class="descname">getPID</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getPID" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return the PID of supervisord</p>\u000a<p>&#64;return int PID</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.readLog">\u000a<tt class="descname">readLog</tt><big>(</big><em>offset</em>, <em>length</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.readLog" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Read length bytes from the main log starting at offset</p>\u000a<p>&#64;param int offset         offset to start reading from.\u000a&#64;param int length         number of bytes to read from the log.\u000a&#64;return string result     Bytes of log</p>\u000a<p>It can either return the entire log, a number of characters from the\u000atail of the log, or a slice of the log specified by the offset and\u000alength parameters:</p>\u000a<table border="1" class="docutils">\u000a<colgroup>\u000a<col width="12%" />\u000a<col width="14%" />\u000a<col width="74%" />\u000a</colgroup>\u000a<thead valign="bottom">\u000a<tr class="row-odd"><th class="head">Offset</th>\u000a<th class="head">Length</th>\u000a<th class="head">Behavior of <tt class="docutils literal"><span class="pre">readProcessLog</span></tt></th>\u000a</tr>\u000a</thead>\u000a<tbody valign="top">\u000a<tr class="row-even"><td>Negative</td>\u000a<td>Not Zero</td>\u000a<td>Bad arguments. This will raise the fault\u000a<tt class="docutils literal"><span class="pre">BAD_ARGUMENTS</span></tt>.</td>\u000a</tr>\u000a<tr class="row-odd"><td>Negative</td>\u000a<td>Zero</td>\u000a<td>This will return the tail of the log, or offset\u000anumber of characters from the end of the log.\u000aFor example, if <tt class="docutils literal"><span class="pre">offset</span></tt> = -4 and <tt class="docutils literal"><span class="pre">length</span></tt>\u000a= 0, then the last four characters will be\u000areturned from the end of the log.</td>\u000a</tr>\u000a<tr class="row-even"><td>Zero or\u000aPositive</td>\u000a<td>Negative</td>\u000a<td>Bad arguments. This will raise the fault\u000a<tt class="docutils literal"><span class="pre">BAD_ARGUMENTS</span></tt>.</td>\u000a</tr>\u000a<tr class="row-odd"><td>Zero or\u000aPositive</td>\u000a<td>Zero</td>\u000a<td>All characters will be returned from the\u000a<tt class="docutils literal"><span class="pre">offset</span></tt> specified.</td>\u000a</tr>\u000a<tr class="row-even"><td>Zero or\u000aPositive</td>\u000a<td>Positive</td>\u000a<td>A number of characters length will be returned\u000afrom the <tt class="docutils literal"><span class="pre">offset</span></tt>.</td>\u000a</tr>\u000a</tbody>\u000a</table>\u000a<p>If the log is empty and the entire log is requested, an empty string\u000ais returned.</p>\u000a<p>If either offset or length is out of range, the fault\u000a<tt class="docutils literal"><span class="pre">BAD_ARGUMENTS</span></tt> will be returned.</p>\u000a<p>If the log cannot be read, this method will raise either the\u000a<tt class="docutils literal"><span class="pre">NO_FILE</span></tt> error if the file does not exist or the <tt class="docutils literal"><span class="pre">FAILED</span></tt> error\u000aif any other problem was encountered.</p>\u000a<div class="admonition note">\u000a<p class="first admonition-title">Note</p>\u000a<p class="last">The readLog() method replaces readMainLog() found in Supervisor\u000aversions prior to 2.1. It is aliased for compatibility but\u000areadMainLog() is deprecated and support will be dropped from\u000aSupervisor in a future version.</p>\u000a</div>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.clearLog">\u000a<tt class="descname">clearLog</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.clearLog" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Clear the main log.</p>\u000a<p>&#64;return boolean result always returns True unless error</p>\u000a<p>If the log cannot be cleared because the log file does not exist, the\u000afault <tt class="docutils literal"><span class="pre">NO_FILE</span></tt> will be raised. If the log cannot be cleared for any\u000aother reason, the fault <tt class="docutils literal"><span class="pre">FAILED</span></tt> will be raised.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.shutdown">\u000a<tt class="descname">shutdown</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.shutdown" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Shut down the supervisor process</p>\u000a<p>&#64;return boolean result always returns True unless error</p>\u000a<p>This method shuts down the Supervisor daemon. If any processes are running,\u000athey are automatically killed without warning.</p>\u000a<p>Unlike most other methods, if Supervisor is in the <tt class="docutils literal"><span class="pre">FATAL</span></tt> state,\u000athis method will still function.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.restart">\u000a<tt class="descname">restart</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.restart" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Restart the supervisor process</p>\u000a<p>&#64;return boolean result  always return True unless error</p>\u000a<p>This method soft restarts the Supervisor daemon. If any processes are\u000arunning, they are automatically killed without warning. Note that the\u000aactual UNIX process for Supervisor cannot restart; only Supervisor\u2019s\u000amain program loop. This has the effect of resetting the internal\u000astates of Supervisor.</p>\u000a<p>Unlike most other methods, if Supervisor is in the <tt class="docutils literal"><span class="pre">FATAL</span></tt> state,\u000athis method will still function.</p>\u000a</dd></dl>\u000a\u000a</dd></dl>\u000a\u000a</div></blockquote>\u000a</div>\u000a<div class="section" id="process-control">\u000a<h2>Process Control<a class="headerlink" href="#process-control" title="Permalink to this headline">¶</a></h2>\u000a<blockquote>\u000a<div><dl class="class">\u000a<dt>\u000a<em class="property">class </em><tt class="descclassname">supervisor.rpcinterface.</tt><tt class="descname">SupervisorNamespaceRPCInterface</tt><big>(</big><em>supervisord</em><big>)</big></dt>\u000a<dd><dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getProcessInfo">\u000a<tt class="descname">getProcessInfo</tt><big>(</big><em>name</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getProcessInfo" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Get info about a process named name</p>\u000a<p>&#64;param string name The name of the process (or &#8216;group:name&#8217;)\u000a&#64;return struct result     A structure containing data about the process</p>\u000a<p>The return value is a struct:</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span class="p">{</span><span class="s">&#39;name&#39;</span><span class="p">:</span>           <span class="s">&#39;process name&#39;</span><span class="p">,</span>\u000a <span class="s">&#39;group&#39;</span><span class="p">:</span>          <span class="s">&#39;group name&#39;</span><span class="p">,</span>\u000a <span class="s">&#39;description&#39;</span><span class="p">:</span>    <span class="s">&#39;pid 18806, uptime 0:03:12&#39;</span>\u000a <span class="s">&#39;start&#39;</span><span class="p">:</span>          <span class="mi">1200361776</span><span class="p">,</span>\u000a <span class="s">&#39;stop&#39;</span><span class="p">:</span>           <span class="mi">0</span><span class="p">,</span>\u000a <span class="s">&#39;now&#39;</span><span class="p">:</span>            <span class="mi">1200361812</span><span class="p">,</span>\u000a <span class="s">&#39;state&#39;</span><span class="p">:</span>          <span class="mi">1</span><span class="p">,</span>\u000a <span class="s">&#39;statename&#39;</span><span class="p">:</span>      <span class="s">&#39;RUNNING&#39;</span><span class="p">,</span>\u000a <span class="s">&#39;spawnerr&#39;</span><span class="p">:</span>       <span class="s">&#39;&#39;</span><span class="p">,</span>\u000a <span class="s">&#39;exitstatus&#39;</span><span class="p">:</span>     <span class="mi">0</span><span class="p">,</span>\u000a <span class="s">&#39;logfile&#39;</span><span class="p">:</span>        <span class="s">&#39;/path/to/stdout-log&#39;</span><span class="p">,</span> <span class="c"># deprecated, b/c only</span>\u000a <span class="s">&#39;stdout_logfile&#39;</span><span class="p">:</span> <span class="s">&#39;/path/to/stdout-log&#39;</span><span class="p">,</span>\u000a <span class="s">&#39;stderr_logfile&#39;</span><span class="p">:</span> <span class="s">&#39;/path/to/stderr-log&#39;</span><span class="p">,</span>\u000a <span class="s">&#39;pid&#39;</span><span class="p">:</span>            <span class="mi">1</span><span class="p">}</span>\u000a</pre></div>\u000a</div>\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">name</tt></dt>\u000a<dd><p>Name of the process</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">group</tt></dt>\u000a<dd><p>Name of the process&#8217; group</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">description</tt></dt>\u000a<dd><p>If process state is running description&#8217;s value is process_id\u000aand uptime. Example &#8220;pid 18806, uptime 0:03:12 &#8221;.\u000aIf process state is stopped description&#8217;s value is stop time.\u000aExample:&#8221;Jun 5 03:16 PM &#8221;.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">start</tt></dt>\u000a<dd><p>UNIX timestamp of when the process was started</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">stop</tt></dt>\u000a<dd><p>UNIX timestamp of when the process last ended, or 0 if the process\u000ahas never been stopped.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">now</tt></dt>\u000a<dd><p>UNIX timestamp of the current time, which can be used to calculate\u000aprocess up-time.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">state</tt></dt>\u000a<dd><p>State code, see <a class="reference internal" href="subprocess.html#process-states"><em>Process States</em></a>.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">statename</tt></dt>\u000a<dd><p>String description of <cite>state</cite>, see <a class="reference internal" href="subprocess.html#process-states"><em>Process States</em></a>.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">logfile</tt></dt>\u000a<dd><p>Deprecated alias for <tt class="docutils literal"><span class="pre">stdout_logfile</span></tt>.  This is provided only\u000afor compatibility with clients written for Supervisor 2.x and\u000amay be removed in the future.  Use <tt class="docutils literal"><span class="pre">stdout_logfile</span></tt> instead.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">stdout_logfile</tt></dt>\u000a<dd><p>Absolute path and filename to the STDOUT logfile</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">stderr_logfile</tt></dt>\u000a<dd><p>Absolute path and filename to the STDOUT logfile</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">spawnerr</tt></dt>\u000a<dd><p>Description of error that occurred during spawn, or empty string\u000aif none.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">exitstatus</tt></dt>\u000a<dd><p>Exit status (errorlevel) of process, or 0 if the process is still\u000arunning.</p>\u000a</dd></dl>\u000a\u000a<dl class="describe">\u000a<dt>\u000a<tt class="descname">pid</tt></dt>\u000a<dd><p>UNIX process ID (PID) of the process, or 0 if the process is not\u000arunning.</p>\u000a</dd></dl>\u000a\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getAllProcessInfo">\u000a<tt class="descname">getAllProcessInfo</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.getAllProcessInfo" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Get info about all processes</p>\u000a<p>&#64;return array result  An array of process status results</p>\u000a<p>Each element contains a struct, and this struct contains the exact\u000asame elements as the struct returned by <tt class="docutils literal"><span class="pre">getProcessInfo</span></tt>. If the process\u000atable is empty, an empty array is returned.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.startProcess">\u000a<tt class="descname">startProcess</tt><big>(</big><em>name</em>, <em>wait=True</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.startProcess" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Start a process</p>\u000a<p>&#64;param string name Process name (or <tt class="docutils literal"><span class="pre">group:name</span></tt>, or <tt class="docutils literal"><span class="pre">group:*</span></tt>)\u000a&#64;param boolean wait Wait for process to be fully started\u000a&#64;return boolean result     Always true unless error</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.startAllProcesses">\u000a<tt class="descname">startAllProcesses</tt><big>(</big><em>wait=True</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.startAllProcesses" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Start all processes listed in the configuration file</p>\u000a<p>&#64;param boolean wait    Wait for each process to be fully started\u000a&#64;return array result   An array of process status info structs</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.startProcessGroup">\u000a<tt class="descname">startProcessGroup</tt><big>(</big><em>name</em>, <em>wait=True</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.startProcessGroup" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Start all processes in the group named &#8216;name&#8217;</p>\u000a<p>&#64;param string name     The group name\u000a&#64;param boolean wait    Wait for each process to be fully started\u000a&#64;return array result   An array of process status info structs</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.stopProcess">\u000a<tt class="descname">stopProcess</tt><big>(</big><em>name</em>, <em>wait=True</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.stopProcess" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Stop a process named by name</p>\u000a<p>&#64;param string name  The name of the process to stop (or &#8216;group:name&#8217;)\u000a&#64;param boolean wait        Wait for the process to be fully stopped\u000a&#64;return boolean result     Always return True unless error</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.stopProcessGroup">\u000a<tt class="descname">stopProcessGroup</tt><big>(</big><em>name</em>, <em>wait=True</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.stopProcessGroup" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Stop all processes in the process group named &#8216;name&#8217;</p>\u000a<p>&#64;param string name     The group name\u000a&#64;param boolean wait    Wait for each process to be fully stopped\u000a&#64;return array result   An array of process status info structs</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.stopAllProcesses">\u000a<tt class="descname">stopAllProcesses</tt><big>(</big><em>wait=True</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.stopAllProcesses" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Stop all processes in the process list</p>\u000a<p>&#64;param  boolean wait   Wait for each process to be fully stopped\u000a&#64;return array result   An array of process status info structs</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.signalProcess">\u000a<tt class="descname">signalProcess</tt><big>(</big><em>name</em>, <em>signal</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.signalProcess" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Send an arbitrary UNIX signal to the process named by name</p>\u000a<p>&#64;param string name    Name of the process to signal (or &#8216;group:name&#8217;)\u000a&#64;param string signal  Signal to send, as name (&#8216;HUP&#8217;) or number (&#8216;1&#8217;)\u000a&#64;return boolean</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.signalProcessGroup">\u000a<tt class="descname">signalProcessGroup</tt><big>(</big><em>name</em>, <em>signal</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.signalProcessGroup" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Send a signal to all processes in the group named &#8216;name&#8217;</p>\u000a<p>&#64;param string name    The group name\u000a&#64;param string signal  Signal to send, as name (&#8216;HUP&#8217;) or number (&#8216;1&#8217;)\u000a&#64;return array</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.signalAllProcesses">\u000a<tt class="descname">signalAllProcesses</tt><big>(</big><em>signal</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.signalAllProcesses" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Send a signal to all processes in the process list</p>\u000a<p>&#64;param string signal  Signal to send, as name (&#8216;HUP&#8217;) or number (&#8216;1&#8217;)\u000a&#64;return array         An array of process status info structs</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.sendProcessStdin">\u000a<tt class="descname">sendProcessStdin</tt><big>(</big><em>name</em>, <em>chars</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.sendProcessStdin" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Send a string of chars to the stdin of the process name.\u000aIf non-7-bit data is sent (unicode), it is encoded to utf-8\u000abefore being sent to the process&#8217; stdin.  If chars is not a\u000astring or is not unicode, raise INCORRECT_PARAMETERS.  If the\u000aprocess is not running, raise NOT_RUNNING.  If the process&#8217;\u000astdin cannot accept input (e.g. it was closed by the child\u000aprocess), raise NO_FILE.</p>\u000a<p>&#64;param string name        The process name to send to (or &#8216;group:name&#8217;)\u000a&#64;param string chars       The character data to send to the process\u000a&#64;return boolean result    Always return True unless error</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.sendRemoteCommEvent">\u000a<tt class="descname">sendRemoteCommEvent</tt><big>(</big><em>type</em>, <em>data</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.sendRemoteCommEvent" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Send an event that will be received by event listener\u000asubprocesses subscribing to the RemoteCommunicationEvent.</p>\u000a<p>&#64;param  string  type  String for the &#8220;type&#8221; key in the event header\u000a&#64;param  string  data  Data for the event body\u000a&#64;return boolean       Always return True unless error</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.reloadConfig">\u000a<tt class="descname">reloadConfig</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.reloadConfig" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Reload configuration</p>\u000a<p>&#64;return boolean result  always return True unless error</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.addProcessGroup">\u000a<tt class="descname">addProcessGroup</tt><big>(</big><em>name</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.addProcessGroup" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Update the config for a running process from config file.</p>\u000a<p>&#64;param string name         name of process group to add\u000a&#64;return boolean result     true if successful</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.removeProcessGroup">\u000a<tt class="descname">removeProcessGroup</tt><big>(</big><em>name</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.removeProcessGroup" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Remove a stopped process from the active configuration.</p>\u000a<p>&#64;param string name         name of process group to remove\u000a&#64;return boolean result     Indicates whether the removal was successful</p>\u000a</dd></dl>\u000a\u000a</dd></dl>\u000a\u000a</div></blockquote>\u000a</div>\u000a<div class="section" id="process-logging">\u000a<h2>Process Logging<a class="headerlink" href="#process-logging" title="Permalink to this headline">¶</a></h2>\u000a<blockquote>\u000a<div><dl class="class">\u000a<dt>\u000a<em class="property">class </em><tt class="descclassname">supervisor.rpcinterface.</tt><tt class="descname">SupervisorNamespaceRPCInterface</tt><big>(</big><em>supervisord</em><big>)</big></dt>\u000a<dd><dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.readProcessStdoutLog">\u000a<tt class="descname">readProcessStdoutLog</tt><big>(</big><em>name</em>, <em>offset</em>, <em>length</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.readProcessStdoutLog" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Read length bytes from name&#8217;s stdout log starting at offset</p>\u000a<p>&#64;param string name        the name of the process (or &#8216;group:name&#8217;)\u000a&#64;param int offset         offset to start reading from.\u000a&#64;param int length         number of bytes to read from the log.\u000a&#64;return string result     Bytes of log</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.readProcessStderrLog">\u000a<tt class="descname">readProcessStderrLog</tt><big>(</big><em>name</em>, <em>offset</em>, <em>length</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.readProcessStderrLog" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Read length bytes from name&#8217;s stderr log starting at offset</p>\u000a<p>&#64;param string name        the name of the process (or &#8216;group:name&#8217;)\u000a&#64;param int offset         offset to start reading from.\u000a&#64;param int length         number of bytes to read from the log.\u000a&#64;return string result     Bytes of log</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.tailProcessStdoutLog">\u000a<tt class="descname">tailProcessStdoutLog</tt><big>(</big><em>name</em>, <em>offset</em>, <em>length</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.tailProcessStdoutLog" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Provides a more efficient way to tail the (stdout) log than\u000areadProcessStdoutLog().  Use readProcessStdoutLog() to read\u000achunks and tailProcessStdoutLog() to tail.</p>\u000a<p>Requests (length) bytes from the (name)&#8217;s log, starting at\u000a(offset).  If the total log size is greater than (offset +\u000alength), the overflow flag is set and the (offset) is\u000aautomatically increased to position the buffer at the end of\u000athe log.  If less than (length) bytes are available, the\u000amaximum number of available bytes will be returned.  (offset)\u000areturned is always the last offset in the log +1.</p>\u000a<p>&#64;param string name         the name of the process (or &#8216;group:name&#8217;)\u000a&#64;param int offset          offset to start reading from\u000a&#64;param int length          maximum number of bytes to return\u000a&#64;return array result       [string bytes, int offset, bool overflow]</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.tailProcessStderrLog">\u000a<tt class="descname">tailProcessStderrLog</tt><big>(</big><em>name</em>, <em>offset</em>, <em>length</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.tailProcessStderrLog" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Provides a more efficient way to tail the (stderr) log than\u000areadProcessStderrLog().  Use readProcessStderrLog() to read\u000achunks and tailProcessStderrLog() to tail.</p>\u000a<p>Requests (length) bytes from the (name)&#8217;s log, starting at\u000a(offset).  If the total log size is greater than (offset +\u000alength), the overflow flag is set and the (offset) is\u000aautomatically increased to position the buffer at the end of\u000athe log.  If less than (length) bytes are available, the\u000amaximum number of available bytes will be returned.  (offset)\u000areturned is always the last offset in the log +1.</p>\u000a<p>&#64;param string name         the name of the process (or &#8216;group:name&#8217;)\u000a&#64;param int offset          offset to start reading from\u000a&#64;param int length          maximum number of bytes to return\u000a&#64;return array result       [string bytes, int offset, bool overflow]</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.clearProcessLogs">\u000a<tt class="descname">clearProcessLogs</tt><big>(</big><em>name</em><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.clearProcessLogs" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Clear the stdout and stderr logs for the named process and\u000areopen them.</p>\u000a<p>&#64;param string name   The name of the process (or &#8216;group:name&#8217;)\u000a&#64;return boolean result      Always True unless error</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.rpcinterface.SupervisorNamespaceRPCInterface.clearAllProcessLogs">\u000a<tt class="descname">clearAllProcessLogs</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.rpcinterface.SupervisorNamespaceRPCInterface.clearAllProcessLogs" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Clear all process log files</p>\u000a<p>&#64;return array result   An array of process status info structs</p>\u000a</dd></dl>\u000a\u000a</dd></dl>\u000a\u000a</div></blockquote>\u000a<span class="target" id="module-supervisor.xmlrpc"></span></div>\u000a<div class="section" id="system-methods">\u000a<h2>System Methods<a class="headerlink" href="#system-methods" title="Permalink to this headline">¶</a></h2>\u000a<blockquote>\u000a<div><dl class="class">\u000a<dt id="supervisor.xmlrpc.SystemNamespaceRPCInterface">\u000a<em class="property">class </em><tt class="descclassname">supervisor.xmlrpc.</tt><tt class="descname">SystemNamespaceRPCInterface</tt><big>(</big><em>namespaces</em><big>)</big><a class="headerlink" href="#supervisor.xmlrpc.SystemNamespaceRPCInterface" title="Permalink to this definition">¶</a></dt>\u000a<dd><dl class="method">\u000a<dt id="supervisor.xmlrpc.SystemNamespaceRPCInterface.listMethods">\u000a<tt class="descname">listMethods</tt><big>(</big><big>)</big><a class="headerlink" href="#supervisor.xmlrpc.SystemNamespaceRPCInterface.listMethods" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return an array listing the available method names</p>\u000a<p>&#64;return array result  An array of method names available (strings).</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.xmlrpc.SystemNamespaceRPCInterface.methodHelp">\u000a<tt class="descname">methodHelp</tt><big>(</big><em>name</em><big>)</big><a class="headerlink" href="#supervisor.xmlrpc.SystemNamespaceRPCInterface.methodHelp" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return a string showing the method&#8217;s documentation</p>\u000a<p>&#64;param string name   The name of the method.\u000a&#64;return string result The documentation for the method name.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.xmlrpc.SystemNamespaceRPCInterface.methodSignature">\u000a<tt class="descname">methodSignature</tt><big>(</big><em>name</em><big>)</big><a class="headerlink" href="#supervisor.xmlrpc.SystemNamespaceRPCInterface.methodSignature" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Return an array describing the method signature in the\u000aform [rtype, ptype, ptype...] where rtype is the return data type\u000aof the method, and ptypes are the parameter data types that the\u000amethod accepts in method argument order.</p>\u000a<p>&#64;param string name  The name of the method.\u000a&#64;return array result  The result.</p>\u000a</dd></dl>\u000a\u000a<dl class="method">\u000a<dt id="supervisor.xmlrpc.SystemNamespaceRPCInterface.multicall">\u000a<tt class="descname">multicall</tt><big>(</big><em>calls</em><big>)</big><a class="headerlink" href="#supervisor.xmlrpc.SystemNamespaceRPCInterface.multicall" title="Permalink to this definition">¶</a></dt>\u000a<dd><p>Process an array of calls, and return an array of\u000aresults. Calls should be structs of the form {&#8216;methodName&#8217;:\u000astring, &#8216;params&#8217;: array}. Each result will either be a\u000asingle-item array containing the result value, or a struct of\u000athe form {&#8216;faultCode&#8217;: int, &#8216;faultString&#8217;: string}. This is\u000auseful when you need to make lots of small calls without lots\u000aof round trips.</p>\u000a<p>&#64;param array calls  An array of call requests\u000a&#64;return array result  An array of results</p>\u000a</dd></dl>\u000a\u000a</dd></dl>\u000a\u000a</div></blockquote>\u000a</div>\u000a</div>\u000a\u000a\u000a           </div>\u000a          </div>\u000a          <footer>\u000a  \u000a    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">\u000a      \u000a        <a href="plugins.html" class="btn btn-neutral float-right" title="Third Party Applications and Libraries" accesskey="n">Next <span class="fa fa-arrow-circle-right"></span></a>\u000a      \u000a      \u000a        <a href="glossary.html" class="btn btn-neutral" title="Glossary" accesskey="p"><span class="fa fa-arrow-circle-left"></span> Previous</a>\u000a      \u000a    </div>\u000a  \u000a\u000a  <hr/>\u000a\u000a  <div role="contentinfo">\u000a    <p>\u000a        &copy; Copyright 2004-2016, Agendaless Consulting and Contributors.\u000a      Last updated on Dec 21, 2016.\u000a\u000a    </p>\u000a  </div>\u000a  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/snide/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org">Read the Docs</a>. \u000a\u000a</footer>\u000a\u000a        </div>\u000a      </div>\u000a\u000a    </section>\u000a\u000a  </div>\u000a  \u000a\u000a\u000a  \u000a\u000a    <script type="text/javascript">\u000a        var DOCUMENTATION_OPTIONS = {\u000a            URL_ROOT:'./',\u000a            VERSION:'3.3.1',\u000a            COLLAPSE_INDEX:false,\u000a            FILE_SUFFIX:'.html',\u000a            HAS_SOURCE:  true\u000a        };\u000a    </script>\u000a      <script type="text/javascript" src="_static/jquery.js"></script>\u000a      <script type="text/javascript" src="_static/underscore.js"></script>\u000a      <script type="text/javascript" src="_static/doctools.js"></script>\u000a\u000a  \u000a\u000a  \u000a  \u000a    <script type="text/javascript" src="_static/js/theme.js"></script>\u000a  \u000a\u000a  \u000a  \u000a  <script type="text/javascript">\u000a      jQuery(function () {\u000a          SphinxRtdTheme.StickyNav.enable();\u000a      });\u000a  </script>\u000a   \u000a\u000a</body>\u000a</html>
p3
a.