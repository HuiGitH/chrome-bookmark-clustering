(lp0
S'http://www.letiantian.me/2014-10-04-asynchronous-requests/'
p1
aS'\xe5\xa6\x82\xe4\xbd\x95\xe5\xb0\x86requests\xe5\x8f\x98\xe6\x88\x90\xe4\xb8\x80\xe4\xb8\xaa\xe5\xbc\x82\xe6\xad\xa5HTTP\xe5\xba\x93 - \xe6\xa8\x82\xe5\xa4\xa9\xe7\xac\x94\xe8\xae\xb0'
p2
aI0
aV<!DOCTYPE html>\u000a<html>\u000a  <head>\u000a    <meta charset="UTF-8" />\u000a\u000a    \u000a\u000a    <title>\u000a      \u5982\u4f55\u5c06requests\u53d8\u6210\u4e00\u4e2a\u5f02\u6b65HTTP\u5e93 | \u6a02\u5929\u7b14\u8bb0 \u000a    </title>\u000a\u000a    \u000a      <meta name="author" content="Letian">\u000a    \u000a\u000a    \u000a\u000a    <meta http-equiv="X-UA-Compatible" content="chrome=1">\u000a    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">\u000a    <link rel="shortcut icon" href="/assets/image/favicon.ico">\u000a    <!--[if lt IE 9]>\u000a      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>\u000a    <![endif]-->\u000a    <link href="/assets/style/screen.css" rel="stylesheet" type="text/css" media="all">\u000a  </head>\u000a\u000a  <body>\u000a    <img class='bg-image' src="/assets/image/bg.jpg" />\u000a    <header id="header" class="clearfix header-fixed-top">\u000a      <div class="nav">\u000a        <h1><a href="/">\u6a02\u5929\u7b14\u8bb0</a></h1>\u000a        <ul>\u000a        \u000a          \u000a            <li><a href="/topics">\u4e13\u9898</a></li>\u000a          \u000a            <li><a href="/tags">\u6807\u7b7e</a></li>\u000a          \u000a            <li><a href="/about">\u5173\u4e8e</a></li>\u000a          \u000a\u000a        </ul>\u000a      </div>\u000a    </header>\u000a\u000a    \u000a\u000a<div id="container">\u000a    <div id="main" class="clearfix">\u000a        <div class="content clearfix">\u000a            <article>\u000a                <h2 class="title">\u000a                    <a href="/2014-10-04-asynchronous-requests/">\u5982\u4f55\u5c06requests\u53d8\u6210\u4e00\u4e2a\u5f02\u6b65HTTP\u5e93</a>\u000a                </h2>\u000a                <div class="tag-list">\u000a                    \u000a                        October 4th 2014\u000a\u000a                        \u000a                            &nbsp;|&nbsp;Tags:\u000a                            <a class="tag-link" href="/tags/\u5f02\u6b65\u7f16\u7a0b/">\u5f02\u6b65\u7f16\u7a0b</a>, <a class="tag-link" href="/tags/\u7f16\u7a0b\u5b9e\u8df5/">\u7f16\u7a0b\u5b9e\u8df5</a>\u000a                        \u000a                    \u000a                </div>\u000a                <div class="article-content">\u000a                    \u000a                        <p>2014-10-04</p>\u000a<p>requests\u5e93\u662fpython\u4e00\u4e2a\u4f18\u79c0\u7684HTTP\u5e93\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u5730\u6267\u884cHTTP\u7684\u5404\u79cd\u64cd\u4f5c\uff0c\u4f8b\u5982GET\u3001POST\u7b49\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u5e93\u6240\u6267\u884c\u7684\u7f51\u7edc\u8bf7\u6c42\u90fd\u662f\u540c\u6b65\u4e86\uff0c\u5373cpu\u53d1\u51fa\u8bf7\u6c42\u6307\u4ee4\u540e\uff0cIO\u6267\u884c\u53d1\u9001\u548c\u7b49\u5f85\u7b49\u64cd\u4f5c\uff0c\u5728\u8fd9\u6bb5IO\u6267\u884c\u7684\u65f6\u95f4\u91cc\uff0ccpu\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u8fd9\u6837cpu\u7684\u8ba1\u7b97\u80fd\u529b\u5c31\u88ab\u6d6a\u8d39\u4e86\u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u628a\u7f51\u7edc\u8bf7\u6c42\u4fee\u6539\u4e3a\u5f02\u6b65\u7684\uff0c\u4e5f\u5c31\u662f\u5728IO\u53d1\u6325\u4f5c\u7528\u7684\u8fd9\u6bb5\u65f6\u95f4\uff0cCPU\u53bb\u505a\u8fd9\u4e2a\u7a0b\u5e8f\u91cc\u7684\u5176\u4ed6\u4e8b\u60c5\uff0c\u7b49IO\u6536\u5230\u54cd\u5e94\u7684\u6570\u636e\uff0cCPU\u56de\u6765\u5904\u7406\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u5c06requests\u53d8\u6210\u4e00\u4e2a\u5f02\u6b65HTTP\u5e93\u3002</p>\u000a<h2 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h2><hr>\u000a<p>\u5b89\u88c5\uff1a</p>\u000a<pre><code>sudo pip install requests\u000a</code></pre><p>\u4e00\u4e2a\u83b7\u53d6\u9875\u9762\u7684\u793a\u4f8b\uff08test01.py\uff09\uff1a</p>\u000a<pre><code># -*- coding: utf-8 -*- \u000a\u000aimport sys\u000areload(sys)\u000asys.setdefaultencoding(&#39;utf-8&#39;) \u000a\u000aimport requests\u000ar = requests.get(&#39;http://letiantian.me/&#39;)\u000aprint r.text\u000a</code></pre><p>\u5982\u679c\u7f51\u7edc\u6ca1\u95ee\u9898\uff0c\u4f1a\u83b7\u53d6<code>http://letiantian.me/</code>\u9875\u9762\u7684html\u4ee3\u7801\u3002</p>\u000a<h2 id="gevent"><a href="#gevent" class="headerlink" title="gevent"></a>gevent</h2><hr>\u000a<blockquote>\u000a<p> gevent is a coroutine-based Python networking library that uses greenlet to provide a high-level synchronous API on top of the libev event loop.</p>\u000a</blockquote>\u000a<p>\u8bdd\u662f\u8fd9\u6837\u8bf4\uff0cgevent\u7684\u6548\u679c\u662f\u5f02\u6b65\u7684\u3002</p>\u000a<hr>\u000a<p>\u5b89\u88c5\uff1a</p>\u000a<pre><code>sudo pip install gevent\u000a</code></pre><p>\u4e0d\u4f7f\u7528gevent\uff0ctest02.py\u4ee3\u7801\u4e3a\uff1a</p>\u000a<pre><code># -*- coding: utf-8 -*- \u000a\u000aimport sys\u000areload(sys)\u000asys.setdefaultencoding(&#39;utf-8&#39;) \u000a\u000aimport urllib2\u000a\u000aurls = [&quot;http://letiantian.me/&quot;] *10\u000a\u000adef get_content(url):\u000a    data = urllib2.urlopen(url).read()\u000a    return data\u000a\u000afor url in urls:\u000a    get_content(url)\u000a</code></pre><p>\u4f7f\u7528gevent\uff0ctest03.py\u4ee3\u7801\u4e3a\uff1a</p>\u000a<pre><code># -*- coding: utf-8 -*- \u000a\u000aimport sys\u000areload(sys)\u000asys.setdefaultencoding(&#39;utf-8&#39;) \u000a\u000aimport gevent\u000afrom gevent import monkey\u000amonkey.patch_socket()\u000a\u000aimport urllib2\u000a\u000aurls = [&quot;http://letiantian.me/&quot;] *10\u000a\u000adef get_content(url):\u000a    data = urllib2.urlopen(url).read()\u000a    return data\u000a\u000a\u000ajobs = [gevent.spawn(get_content, url) for url in urls]\u000agevent.joinall(jobs)\u000a\u000a# print jobs[0].value\u000a</code></pre><p>\u6bd4\u8f83\u4e24\u8005\u7684\u8fd0\u884c\u65f6\u95f4\uff1a</p>\u000a<pre><code>zsh &gt;&gt; time  python test02.py \u000apython test02.py  0.05s user 0.02s system 0% cpu 7.362 total\u000azsh &gt;&gt; time  python test03.py\u000apython test03.py  0.06s user 0.01s system 3% cpu 2.100 total\u000a</code></pre><p>\u53ef\u89c1\uff0c\u4f7f\u7528gevent\u65f6\uff0ccpu\u5229\u7528\u7387\u8f83\u9ad8\uff0c\u4e14\u7a0b\u5e8f\u901f\u5ea6\u4e5f\u8f83\u5feb\uff083\u500d\u901f\u5ea6\uff0c\u4e5f\u53ef\u80fd\u66f4\u5feb\uff09\u3002</p>\u000a<h2 id="grequests\u5e93\uff1a\u4f7f\u7528gevent\u5c01\u88c5requests"><a href="#grequests\u5e93\uff1a\u4f7f\u7528gevent\u5c01\u88c5requests" class="headerlink" title="grequests\u5e93\uff1a\u4f7f\u7528gevent\u5c01\u88c5requests"></a>grequests\u5e93\uff1a\u4f7f\u7528gevent\u5c01\u88c5requests</h2><hr>\u000a<p>\u5b89\u88c5\uff1a</p>\u000a<pre><code>sudo pip install grequests\u000a</code></pre><p>\u4f7f\u7528grequests\u5e93\uff0ctest04.py\u4ee3\u7801\u5982\u4e0b\uff1a</p>\u000a<pre><code># -*- coding: utf-8 -*- \u000a\u000aimport sys\u000areload(sys)\u000asys.setdefaultencoding(&#39;utf-8&#39;) \u000a\u000aimport grequests\u000a\u000aurls = [&quot;http://letiantian.me/&quot;] *10\u000areqs = [grequests.get(url) for url in urls ]\u000aresponse = grequests.map(reqs)\u000a\u000aresponse0 = response[0]\u000a\u000a# print response0.text\u000a</code></pre><p>\u8fd0\u884c\u65f6\u95f4\uff1a</p>\u000a<pre><code>zsh &gt;&gt; time  python test04.py\u000apython test04.py  0.13s user 0.06s system 10% cpu 1.698 total\u000a</code></pre><p>grequests\u5e93\u5b58\u653e\u5728<a href="https://github.com/kennethreitz/grequests" target="_blank" rel="external">https://github.com/kennethreitz/grequests</a>\uff0c\u4ee3\u7801\u5f88\u5c11\uff0c\u5f88\u5bb9\u6613\u770b\u61c2\u3002</p>\u000a<p><strong>\u4e0b\u9762\u7ed3\u5408grequests\u7684\u6e90\u7801\u5206\u6790\u4e00\u4e0btest04.py\u3002</strong><br><code>grequests.get(url)</code>\u5176\u5b9e\u5c31\u662f<code>grequests.AsyncRequest(&#39;GET&#39;, url)</code>\uff0cgrequests\u4e2d\u662f\u4f7f\u7528\u4e86<code>functools.partial</code>\u5bf9\u6b64\u8fdb\u884c\u4e86\u8f6c\u6362\u3002<br>\u7c7b<code>AsyncRequest</code>\u7684<code>__init__</code>\u51fd\u6570\u505a\u4e86\u4e00\u4e9b\u521d\u59cb\u5316\u51fd\u6570\uff0cself.url\u5c31\u662f\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\u65f6\u7ed9\u51fa\u7684url\uff0cself.session\u662f\u4e00\u4e2arequests.Session()\u5bf9\u8c61\u3002<br>\u7c7b<code>AsyncRequest</code>\u6709\u4e00\u4e2asend()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c31\u662f\u8c03\u7528self.session\u7684request\u65b9\u6cd5\uff0c\u5c06\u8bf7\u6c42\u7ed3\u679c\u653e\u5165self.response\u4e2d\u3002<br><code>grequests</code>\u4e0b\u4e5f\u6709\u4e00\u4e2asend\u65b9\u6cd5\uff0c\u5176\u5185\u5bb9\u662f\uff1a</p>\u000a<pre><code>def send(r, pool=None, stream=False):\u000a    if pool != None:\u000a        return pool.spawn(r.send, stream=stream)\u000a    return gevent.spawn(r.send, stream=stream)\u000a</code></pre><p>pool\u662fgevent.pool.Pool\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u7528\u6765\u7ba1\u7406\u4e00\u7ec4greenlet\u3002\u65e0\u8bba\u662fpool.spawn\u8fd8\u662fgevent.spawn\u90fd\u662f\u8d1f\u8d23\u6267\u884c\u5f02\u6b65\u8bf7\u6c42\u3002</p>\u000a<p>\u4e0a\u9762\u7684\u8bf4\u901a\u4e86\uff0c\u90a3\u4e48grequests\u4e0b\u7684map\u51fd\u6570\u4e5f\u597d\u7406\u89e3\u4e86\u3002</p>\u000a<pre><code>def map(requests, stream=False, size=None, exception_handler=None):\u000a    requests = list(requests)\u000a    pool = Pool(size) if size else None\u000a    jobs = [send(r, pool, stream=stream) for r in requests]\u000a    gevent.joinall(jobs)\u000a    ret = []\u000a    for request in requests:\u000a        if request.response:\u000a            ret.append(request.response)\u000a        elif exception_handler:\u000a            exception_handler(request, request.exception)\u000a    return ret\u000a</code></pre><p>\u540e\u9762\u8d34\u4e86grequests\u7684\u6e90\u7801\u3002</p>\u000a<h2 id="requests-futures\u5e93"><a href="#requests-futures\u5e93" class="headerlink" title="requests-futures\u5e93"></a>requests-futures\u5e93</h2><hr>\u000a<p><a href="https://github.com/ross/requests-futures" target="_blank" rel="external">requests-futures\u5e93</a>\u4e5f\u662f\u5c06requests\u5e93\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a\u5f02\u6b65\u5e93\uff0c\u4e0d\u8fc7\u4f7f\u7528\u7684\u662fpython3\u4e2d\u7684\u65b0\u7279\u6027\uff08\u5728python2\u4e2d\u4e5f\u80fd\u4f7f\u7528\uff0c\u4f46\u9700\u8981\u989d\u5916\u5b89\u88c5futures\u5e93\uff09\uff0c\u5b9e\u73b0\u5f97\u4e5f\u5f88\u7b80\u5355\uff0c\u6b64\u5904\u5c31\u4e0d\u4ecb\u7ecd\u4e86\u3002</p>\u000a<h2 id="\u53c2\u8003"><a href="#\u53c2\u8003" class="headerlink" title="\u53c2\u8003"></a>\u53c2\u8003</h2><hr>\u000a<p><a href="http://www.gevent.org/" target="_blank" rel="external">http://www.gevent.org/</a><br><a href="https://github.com/kennethreitz/grequests" target="_blank" rel="external">https://github.com/kennethreitz/grequests</a><br><a href="http://www.gevent.org/gevent.monkey.html#gevent.monkey.patch_all" target="_blank" rel="external">http://www.gevent.org/gevent.monkey.html#gevent.monkey.patch_all</a><br><a href="https://github.com/ross/requests-futures" target="_blank" rel="external">https://github.com/ross/requests-futures</a><br><a href="https://pypi.python.org/pypi/futures" target="_blank" rel="external">https://pypi.python.org/pypi/futures</a><br><a href="http://www.2cto.com/kf/201308/232824.html" target="_blank" rel="external">http://www.2cto.com/kf/201308/232824.html</a><br><a href="http://www.gevent.org/gevent.pool.html" target="_blank" rel="external">http://www.gevent.org/gevent.pool.html</a></p>\u000a<h2 id="grequests\u7684\u6e90\u7801"><a href="#grequests\u7684\u6e90\u7801" class="headerlink" title="grequests\u7684\u6e90\u7801"></a>grequests\u7684\u6e90\u7801</h2><pre><code># -*- coding: utf-8 -*-\u000a\u000a&quot;&quot;&quot;\u000agrequests\u000a~~~~~~~~~\u000a\u000aThis module contains an asynchronous replica of ``requests.api``, powered\u000aby gevent. All API methods return a ``Request`` instance (as opposed to\u000a``Response``). A list of requests can be sent with ``map()``.\u000a&quot;&quot;&quot;\u000afrom functools import partial\u000a\u000atry:\u000a    import gevent\u000a    from gevent import monkey as curious_george\u000a    from gevent.pool import Pool\u000aexcept ImportError:\u000a    raise RuntimeError(&#39;Gevent is required for grequests.&#39;)\u000a\u000a# Monkey-patch.\u000acurious_george.patch_all(thread=False, select=False)\u000a\u000afrom requests import Session\u000a\u000a\u000a__all__ = (\u000a    &#39;map&#39;, &#39;imap&#39;,\u000a    &#39;get&#39;, &#39;options&#39;, &#39;head&#39;, &#39;post&#39;, &#39;put&#39;, &#39;patch&#39;, &#39;delete&#39;, &#39;request&#39;\u000a)\u000a\u000a\u000aclass AsyncRequest(object):\u000a    &quot;&quot;&quot; Asynchronous request.\u000a\u000a    Accept same parameters as ``Session.request`` and some additional:\u000a\u000a    :param session: Session which will do request\u000a    :param callback: Callback called on response.\u000a                     Same as passing ``hooks={&#39;response&#39;: callback}``\u000a    &quot;&quot;&quot;\u000a    def __init__(self, method, url, **kwargs):\u000a        #: Request method\u000a        self.method = method\u000a        #: URL to request\u000a        self.url = url\u000a        #: Associated ``Session``\u000a        self.session = kwargs.pop(&#39;session&#39;, None)\u000a        if self.session is None:\u000a            self.session = Session()\u000a\u000a        callback = kwargs.pop(&#39;callback&#39;, None)\u000a        if callback:\u000a            kwargs[&#39;hooks&#39;] = {&#39;response&#39;: callback}\u000a\u000a        #: The rest arguments for ``Session.request``\u000a        self.kwargs = kwargs\u000a        #: Resulting ``Response``\u000a        self.response = None\u000a\u000a    def send(self, **kwargs):\u000a        &quot;&quot;&quot;\u000a        Prepares request based on parameter passed to constructor and optional ``kwargs```.\u000a        Then sends request and saves response to :attr:`response`\u000a\u000a        :returns: ``Response``\u000a        &quot;&quot;&quot;\u000a        merged_kwargs = {}\u000a        merged_kwargs.update(self.kwargs)\u000a        merged_kwargs.update(kwargs)\u000a        try:\u000a            self.response =  self.session.request(self.method,\u000a                                                self.url, **merged_kwargs)\u000a        except Exception as e:\u000a            self.exception = e\u000a        return self\u000a\u000a\u000adef send(r, pool=None, stream=False):\u000a    &quot;&quot;&quot;Sends the request object using the specified pool. If a pool isn&#39;t\u000a    specified this method blocks. Pools are useful because you can specify size\u000a    and can hence limit concurrency.&quot;&quot;&quot;\u000a    if pool != None:\u000a        return pool.spawn(r.send, stream=stream)\u000a\u000a    return gevent.spawn(r.send, stream=stream)\u000a\u000a\u000a# Shortcuts for creating AsyncRequest with appropriate HTTP method\u000aget = partial(AsyncRequest, &#39;GET&#39;)\u000aoptions = partial(AsyncRequest, &#39;OPTIONS&#39;)\u000ahead = partial(AsyncRequest, &#39;HEAD&#39;)\u000apost = partial(AsyncRequest, &#39;POST&#39;)\u000aput = partial(AsyncRequest, &#39;PUT&#39;)\u000apatch = partial(AsyncRequest, &#39;PATCH&#39;)\u000adelete = partial(AsyncRequest, &#39;DELETE&#39;)\u000a\u000a# synonym\u000adef request(method, url, **kwargs):\u000a    return AsyncRequest(method, url, **kwargs)\u000a\u000a\u000adef map(requests, stream=False, size=None, exception_handler=None):\u000a    &quot;&quot;&quot;Concurrently converts a list of Requests to Responses.\u000a\u000a    :param requests: a collection of Request objects.\u000a    :param stream: If True, the content will not be downloaded immediately.\u000a    :param size: Specifies the number of requests to make at a time. If None, no throttling occurs.\u000a    :param exception_handler: Callback function, called when exception occured. Params: Request, Exception\u000a    &quot;&quot;&quot;\u000a\u000a    requests = list(requests)\u000a\u000a    pool = Pool(size) if size else None\u000a    jobs = [send(r, pool, stream=stream) for r in requests]\u000a    gevent.joinall(jobs)\u000a\u000a    ret = []\u000a\u000a    for request in requests:\u000a        if request.response:\u000a            ret.append(request.response)\u000a        elif exception_handler:\u000a            exception_handler(request, request.exception)\u000a\u000a    return ret\u000a\u000a\u000adef imap(requests, stream=False, size=2, exception_handler=None):\u000a    &quot;&quot;&quot;Concurrently converts a generator object of Requests to\u000a    a generator of Responses.\u000a\u000a    :param requests: a generator of Request objects.\u000a    :param stream: If True, the content will not be downloaded immediately.\u000a    :param size: Specifies the number of requests to make at a time. default is 2\u000a    :param exception_handler: Callback function, called when exception occured. Params: Request, Exception\u000a    &quot;&quot;&quot;\u000a\u000a    pool = Pool(size)\u000a\u000a    def send(r):\u000a        return r.send(stream=stream)\u000a\u000a    for request in pool.imap_unordered(send, requests):\u000a        if request.response:\u000a            yield request.response\u000a        elif exception_handler:\u000a            exception_handler(request, request.exception)\u000a\u000a    pool.join()\u000a</code></pre>\u000a                    \u000a                </div>\u000a            </article>\u000a            <p>\uff08\u5b8c\uff09</p>\u000a            <hr/>\u000a            <div class="ds-thread" data-thread-key="letianbiji-2014-10-04-asynchronous-requests/" data-title="\u5982\u4f55\u5c06requests\u53d8\u6210\u4e00\u4e2a\u5f02\u6b65HTTP\u5e93" data-url="http://www.letiantian.me/2014-10-04-asynchronous-requests/">\u000a\u000a</div>\u000a\u000a<script type="text/javascript">\u000a    var duoshuoQuery = {short_name:"letianbiji"};\u000a    (function() {\u000a        var ds = document.createElement('script');\u000a        ds.type = 'text/javascript';ds.async = true;\u000a        ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\u000a        ds.charset = 'UTF-8';\u000a        (document.getElementsByTagName('head')[0] \u000a         || document.getElementsByTagName('body')[0]).appendChild(ds);\u000a    })();\u000a</script>\u000a        </div>\u000a\u000a    </div>\u000a\u000a    <footer id="footer" class="top-box clearfix">\u000a        <span>\u000a            &copy; \u6a02\u5929\u7b14\u8bb0 2015  | The theme is based on<a href="https://github.com/SerhoLiu/serholiu.com" target="_blank"> MiniAkio</a>.\u000a        </span>\u000a        <a href="javascript:scroll(0,0)" class="to-top">TOP</a>\u000a    </footer>\u000a</div>\u000a\u000a\u000a\u000a  <script src="http://cdn.staticfile.org/jquery/2.1.1-rc2/jquery.min.js"></script>\u000a  <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>\u000a<script type="text/x-mathjax-config"> \u000a    MathJax.Hub.Config({ \u000a         jax: ["input/TeX", "output/HTML-CSS"],\u000a         tex2jax: {inlineMath: [['[latex]','[/latex]'], ['\u005c\u005c(','\u005c\u005c)']]},\u000a        "HTML-CSS": { availableFonts: ["TeX"], preferredFont: "Tex", scale: 108 },\u000a        processEscapes: true\u000a    }); \u000a</script>\u000a<script>\u000a    $(document).ajaxComplete(function(){\u000a         MathJax.Hub.Queue(["Typeset",MathJax.Hub]);\u000a});\u000a</script>\u000a  <!--github\u9879\u76ee\u663e\u793a\uff0c\u9700\u8981jquery-->\u000a<script src="/assets/js/jquery.githubRepoWidget.min.js"></script>\u000a\u000a  <!-- highlight -->\u000a  <script src="/assets/js/highlight/highlight.min.js"></script>\u000a  <link rel="stylesheet" href="/assets/js/highlight/styles/github.css">\u000a\u000a  <!--awesome-toc -->\u000a  <script src="/assets/js/awesome-toc.js"></script>\u000a  <script>\u000a    // \u9ad8\u4eae\u000a    hljs.initHighlightingOnLoad();\u000a    \u000a    // \u5728\u56fe\u7247\u4e0b\u65b9\u663e\u793aalt\u7684\u5185\u5bb9\u000a    $("#container img").each(function(i, ele) {\u000a      var alt = this.alt;\u000a      $(this).after("<em>"+alt+"</em>");\u000a    });\u000a    \u000a    // toc\u000a    $(document).ready(function(){\u000a        $.awesome_toc({        \u000a          autoDetectHeadings: true,\u000a          enableToTopButton: true,\u000a          contentClass: "article-content",\u000a          css: {\u000a              fontSize: "99%",\u000a              largeFontSize: "120%",\u000a              fontColor: '#000',  \u000a              activeFontColor: "#5882FA", \u000a              lineHeight: "1.8",\u000a              backgroundColor: "white",\u000a          },\u000a        });\u000a    });\u000a  </script>\u000a\u000a\u000a\u000a\u000a  </body>\u000a</html>\u000a
p3
a.