(lp0
S'http://www.pyinvoke.org/'
p1
aS'Welcome to Invoke! \xe2\x80\x94 Invoke documentation'
p2
aI0
aV<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\u000a  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\u000a\u000a\u000a<html xmlns="http://www.w3.org/1999/xhtml" lang="en">\u000a  <head>\u000a    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\u000a    \u000a    <title>Welcome to Invoke! &#8212; Invoke  documentation</title>\u000a    \u000a    <link rel="stylesheet" href="_static/alabaster.css" type="text/css" />\u000a    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />\u000a    <link rel="stylesheet" href="https://media.readthedocs.org/css/badge_only.css" type="text/css" />\u000a    \u000a    <script type="text/javascript">\u000a      var DOCUMENTATION_OPTIONS = {\u000a        URL_ROOT:    './',\u000a        VERSION:     '',\u000a        COLLAPSE_INDEX: false,\u000a        FILE_SUFFIX: '.html',\u000a        HAS_SOURCE:  true\u000a      };\u000a    </script>\u000a    <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-2.0.3.min.js"></script>\u000a    <script type="text/javascript" src="https://media.readthedocs.org/javascript/jquery/jquery-migrate-1.2.1.min.js"></script>\u000a    <script type="text/javascript" src="https://media.readthedocs.org/javascript/underscore.js"></script>\u000a    <script type="text/javascript" src="https://media.readthedocs.org/javascript/doctools.js"></script>\u000a    <script type="text/javascript" src="https://media.readthedocs.org/javascript/readthedocs-doc-embed.js"></script>\u000a    <link rel="index" title="Index" href="genindex.html" />\u000a    <link rel="search" title="Search" href="search.html" />\u000a    <link rel="top" title="Invoke  documentation" href="#" />\u000a    <link rel="next" title="Changelog" href="changelog.html" />\u000a   \u000a  <link rel="stylesheet" href="_static/custom.css" type="text/css" />\u000a  \u000a  \u000a  <meta name="viewport" content="width=device-width, initial-scale=0.9, maximum-scale=0.9" />\u000a\u000a  \u000a<!-- RTD Extra Head -->\u000a\u000a<!-- \u000aAlways link to the latest version, as canonical.\u000ahttp://docs.readthedocs.org/en/latest/canonical.html\u000a-->\u000a<link rel="canonical" href="http://www.pyinvoke.org/" />\u000a\u000a<link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css" type="text/css" />\u000a\u000a<script type="text/javascript" src="_static/readthedocs-data.js"></script>\u000a\u000a<!-- Add page-specific data, which must exist in the page js, not global -->\u000a<script type="text/javascript">\u000aREADTHEDOCS_DATA['page'] = 'index' 		\u000aREADTHEDOCS_DATA['source_suffix'] = '.rst'\u000a</script>\u000a\u000a<script type="text/javascript" src="_static/readthedocs-dynamic-include.js"></script>\u000a\u000a<!-- end RTD <extrahead> --></head>\u000a  <body role="document">\u000a  \u000a\u000a    <div class="document">\u000a      <div class="documentwrapper">\u000a        <div class="bodywrapper">\u000a          <div class="body" role="main">\u000a            \u000a  <div class="section" id="welcome-to-invoke">\u000a<h1>Welcome to Invoke!<a class="headerlink" href="#welcome-to-invoke" title="Permalink to this headline">Â\u015b</a></h1>\u000a<p>This website covers project information for Invoke such as the changelog,\u000acontribution guidelines, development roadmap, news/blog, and so forth.\u000aDetailed usage and API documentation can be found at our code documentation\u000asite, <a class="reference external" href="http://docs.pyinvoke.org">docs.pyinvoke.org</a>.</p>\u000a<p>Please see below for our README, or the navigation on the left for the rest of\u000athe site content.</p>\u000a<div class="admonition warning">\u000a<p class="first admonition-title">Warning</p>\u000a<p class="last">While fully usable, Invoke is still pre-1.0 software and has <strong>no</strong>\u000abackwards compatibility guarantees until the 1.0 release occurs! Please\u000amake sure to read <a class="reference external" href="http://www.pyinvoke.org/changelog.html">the changelog</a>\u000acarefully <strong>anytime you upgrade</strong>!</p>\u000a</div>\u000a<hr class="docutils" />\u000a<p>Invoke is a Python (2.6+ and 3.3+) task execution tool &amp; library, drawing\u000ainspiration from various sources to arrive at a powerful &amp; clean feature set.</p>\u000a<ul>\u000a<li><p class="first">Like Ruby&#8217;s Rake tool and Invoke&#8217;s own predecessor Fabric 1.x, it provides a\u000aclean, high level API for running shell commands and defining/organizing\u000atask functions from a <code class="docutils literal"><span class="pre">tasks.py</span></code> file:</p>\u000a<div class="highlight-python"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">invoke</span> <span class="kn">import</span> <span class="n">task</span>\u000a\u000a<span class="nd">@task</span>\u000a<span class="k">def</span> <span class="nf">clean</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">docs</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">bytecode</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">extra</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">):</span>\u000a    <span class="n">patterns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;build&#39;</span><span class="p">]</span>\u000a    <span class="k">if</span> <span class="n">docs</span><span class="p">:</span>\u000a        <span class="n">patterns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;docs/_build&#39;</span><span class="p">)</span>\u000a    <span class="k">if</span> <span class="n">bytecode</span><span class="p">:</span>\u000a        <span class="n">patterns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;**/*.pyc&#39;</span><span class="p">)</span>\u000a    <span class="k">if</span> <span class="n">extra</span><span class="p">:</span>\u000a        <span class="n">patterns</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">extra</span><span class="p">)</span>\u000a    <span class="k">for</span> <span class="n">pattern</span> <span class="ow">in</span> <span class="n">patterns</span><span class="p">:</span>\u000a        <span class="n">ctx</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&quot;rm -rf </span><span class="si">%s</span><span class="s2">&quot;</span> <span class="o">%</span> <span class="n">pattern</span><span class="p">)</span>\u000a\u000a<span class="nd">@task</span>\u000a<span class="k">def</span> <span class="nf">build</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">docs</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>\u000a    <span class="n">ctx</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&quot;python setup.py build&quot;</span><span class="p">)</span>\u000a    <span class="k">if</span> <span class="n">docs</span><span class="p">:</span>\u000a        <span class="n">ctx</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="s2">&quot;sphinx-build docs docs/_build&quot;</span><span class="p">)</span>\u000a</pre></div>\u000a</div>\u000a</li>\u000a<li><p class="first">From GNU Make, it inherits an emphasis on minimal boilerplate for common\u000apatterns and the ability to run multiple tasks in a single invocation:</p>\u000a<div class="highlight-default"><div class="highlight"><pre><span></span>$ invoke clean build\u000a</pre></div>\u000a</div>\u000a</li>\u000a<li><p class="first">Where Fabric 1.x considered the command-line approach the default mode of\u000ause, Invoke (and tools built on it) are equally at home embedded in your own\u000aPython code or a REPL:</p>\u000a<div class="highlight-default"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">invoke</span> <span class="k">import</span> <span class="n">run</span>\u000a<span class="gp">&gt;&gt;&gt; </span><span class="n">result</span> <span class="o">=</span> <span class="n">run</span><span class="p">(</span><span class="s2">&quot;pip install -r requirements.txt&quot;</span><span class="p">,</span> <span class="n">hide</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>\u000a<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">ok</span><span class="p">)</span>\u000a<span class="go">True</span>\u000a<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>\u000a<span class="go">Successfully installed invocations-0.13.0 pep8-1.5.7 spec-1.3.1</span>\u000a<span class="go">&gt;&gt;&gt;</span>\u000a</pre></div>\u000a</div>\u000a</li>\u000a<li><p class="first">Following the lead of most Unix CLI applications, it offers a traditional\u000aflag-based style of command-line parsing, deriving flag names and value types\u000afrom task signatures (optionally, of course!):</p>\u000a<div class="highlight-default"><div class="highlight"><pre><span></span>$ invoke clean --docs --bytecode build --docs --extra=&#39;**/*.pyo&#39;\u000a$ invoke clean -d -b build --docs -e &#39;**/*.pyo&#39;\u000a$ invoke clean -db build -de &#39;**/*.pyo&#39;\u000a</pre></div>\u000a</div>\u000a</li>\u000a<li><p class="first">Like many of its predecessors, it offers advanced features as well &#8211;\u000anamespacing, task aliasing, before/after hooks, parallel execution and more.</p>\u000a</li>\u000a</ul>\u000a<p>For documentation, including detailed installation information, please see\u000a<a class="reference external" href="http://pyinvoke.org">http://pyinvoke.org</a>. Post-install usage information may be found in <code class="docutils literal"><span class="pre">invoke</span>\u000a<span class="pre">--help</span></code>.</p>\u000a<p>You can install the development version via <code class="docutils literal"><span class="pre">pip</span> <span class="pre">install</span> <span class="pre">-e</span>\u000a<span class="pre">git+https://github.com/pyinvoke/invoke#egg=invoke</span></code>.</p>\u000a<div class="toctree-wrapper compound">\u000a</div>\u000a</div>\u000a\u000a\u000a          </div>\u000a        </div>\u000a      </div>\u000a      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">\u000a        <div class="sphinxsidebarwrapper">\u000a<h1 class="logo"><a href="#">Invoke</a></h1>\u000a\u000a\u000a\u000a<p class="blurb">Pythonic task execution</p>\u000a\u000a\u000a\u000a\u000a<p>\u000a<iframe src="https://ghbtns.com/github-btn.html?user=pyinvoke&repo=invoke&type=watch&count=true&size=large&v=2"\u000a  allowtransparency="true" frameborder="0" scrolling="0" width="200px" height="35px"></iframe>\u000a</p>\u000a\u000a\u000a\u000a\u000a\u000a    \u000a\u000a<p>\u000a<a href="https://travis-ci.org/pyinvoke/invoke">\u000a    <img\u000a        alt="https://secure.travis-ci.org/pyinvoke/invoke.svg?branch=master"\u000a        src="https://secure.travis-ci.org/pyinvoke/invoke.svg?branch=master"\u000a    />\u000a</a>\u000a</p>\u000a\u000a\u000a\u000a\u000a    \u000a\u000a<p>\u000a<a href="https://codecov.io/github/pyinvoke/invoke">\u000a    <img\u000a    alt="https://codecov.io/github/pyinvoke/invoke/coverage.svg?branch=master"\u000a    src="https://codecov.io/github/pyinvoke/invoke/coverage.svg?branch=master"\u000a    />\u000a</a>\u000a</p>\u000a<h3>Navigation</h3>\u000a<ul>\u000a<li class="toctree-l1"><a class="reference internal" href="changelog.html">Changelog</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="faq.html">FAQs</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="installing.html">Installing</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="development.html">Development</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="prior_art.html">Prior art</a></li>\u000a<li class="toctree-l1"><a class="reference internal" href="contact.html">Contact</a></li>\u000a</ul>\u000a\u000a\u000a<hr />\u000a<ul>\u000a    \u000a    <li class="toctree-l1"><a href="http://docs.pyinvoke.org">API Docs</a></li>\u000a    \u000a</ul>\u000a\u000a<div id="searchbox" style="display: none" role="search">\u000a  <h3>Quick search</h3>\u000a    <form class="search" action="search.html" method="get">\u000a      <div><input type="text" name="q" /></div>\u000a      <div><input type="submit" value="Go" /></div>\u000a      <input type="hidden" name="check_keywords" value="yes" />\u000a      <input type="hidden" name="area" value="default" />\u000a    </form>\u000a</div>\u000a<script type="text/javascript">$('#searchbox').show(0);</script>\u000a        </div>\u000a      </div>\u000a      <div class="clearer"></div>\u000a    </div>\u000a    <div class="footer">\u000a      &copy;2016 Jeff Forcier.\u000a      \u000a      |\u000a      Powered by <a href="http://sphinx-doc.org/">Sphinx 1.4.9</a>\u000a      &amp; <a href="https://github.com/bitprophet/alabaster">Alabaster 0.7.9</a>\u000a      \u000a      |\u000a      <a href="_sources/index.txt"\u000a          rel="nofollow">Page source</a>\u000a    </div>\u000a\u000a    \u000a\u000a    \u000a    <script type="text/javascript">\u000a\u000a      var _gaq = _gaq || [];\u000a      _gaq.push(['_setAccount', 'UA-18486793-3']);\u000a      _gaq.push(['_setDomainName', 'none']);\u000a      _gaq.push(['_setAllowLinker', true]);\u000a      _gaq.push(['_trackPageview']);\u000a\u000a      (function() {\u000a        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\u000a        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\u000a        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\u000a      })();\u000a\u000a    </script>\u000a    \u000a  </body>\u000a</html>
p3
a.