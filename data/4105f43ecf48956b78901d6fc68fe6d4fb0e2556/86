(lp0
S'http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/'
p1
aS'Using Scrapy and PyV8 to scrape inline javascript.'
p2
aI0
aV<!DOCTYPE html>\u000a<html>\u000a<head>\u000a    <meta charset="utf-8" />\u000a    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\u000a\u000a    <title>Using Scrapy and PyV8 to scrape inline javascript.</title>\u000a    <meta name="description" content="" />\u000a\u000a    <meta name="HandheldFriendly" content="True" />\u000a    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\u000a\u000a    <link rel="shortcut icon" href="/favicon.ico">\u000a\u000a    <link rel="stylesheet" type="text/css" href="/assets/css/screen.css?v=a5c1d8d951" />\u000a    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Noto+Serif:400,700,400italic|Open+Sans:700,400" />\u000a\u000a    <link rel="canonical" href="http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/" />\u000a    <meta name="referrer" content="no-referrer-when-downgrade" />\u000a    <link rel="amphtml" href="http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/amp/" />\u000a    \u000a    <meta property="og:site_name" content="DutchCoders" />\u000a    <meta property="og:type" content="article" />\u000a    <meta property="og:title" content="Using Scrapy and PyV8 to scrape inline javascript." />\u000a    <meta property="og:description" content="When using Scrapy it is easy to scrape HTML using selectors, but when you are confronted with inline javascript objects in the html it is an other story. I&#x27;m using PyV8 to evaluate the imported scripts and inline javascript. The javascript objects in gistfile2.py allows the javascript libraries to" />\u000a    <meta property="og:url" content="http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/" />\u000a    <meta property="article:published_time" content="2014-08-31T07:05:40.000Z" />\u000a    <meta property="article:modified_time" content="2014-08-31T07:05:40.000Z" />\u000a    <meta name="twitter:card" content="summary" />\u000a    <meta name="twitter:title" content="Using Scrapy and PyV8 to scrape inline javascript." />\u000a    <meta name="twitter:description" content="When using Scrapy it is easy to scrape HTML using selectors, but when you are confronted with inline javascript objects in the html it is an other story. I&#x27;m using PyV8 to evaluate the imported scripts and inline javascript. The javascript objects in gistfile2.py allows the javascript libraries to" />\u000a    <meta name="twitter:url" content="http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/" />\u000a    <meta name="twitter:label1" content="Written by" />\u000a    <meta name="twitter:data1" content="Remco" />\u000a    \u000a    <script type="application/ld+json">\u000a{\u000a    "@context": "https://schema.org",\u000a    "@type": "Article",\u000a    "publisher": {\u000a        "@type": "Organization",\u000a        "name": "DutchCoders",\u000a        "logo": "http://blog.dutchcoders.io/ghost/img/ghosticon.jpg"\u000a    },\u000a    "author": {\u000a        "@type": "Person",\u000a        "name": "Remco",\u000a        "url": "http://blog.dutchcoders.io/author/remco/",\u000a        "sameAs": []\u000a    },\u000a    "headline": "Using Scrapy and PyV8 to scrape inline javascript.",\u000a    "url": "http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/",\u000a    "datePublished": "2014-08-31T07:05:40.000Z",\u000a    "dateModified": "2014-08-31T07:05:40.000Z",\u000a    "description": "When using Scrapy it is easy to scrape HTML using selectors, but when you are confronted with inline javascript objects in the html it is an other story. I&#x27;m using PyV8 to evaluate the imported scripts and inline javascript. The javascript objects in gistfile2.py allows the javascript libraries to",\u000a    "mainEntityOfPage": {\u000a        "@type": "WebPage",\u000a        "@id": "http://blog.dutchcoders.io"\u000a    }\u000a}\u000a    </script>\u000a\u000a    <meta name="generator" content="Ghost 0.11" />\u000a    <link rel="alternate" type="application/rss+xml" title="DutchCoders" href="http://blog.dutchcoders.io/rss/" />\u000a\u000a\u000a    <script>\u000a  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\u000a  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\u000a  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\u000a  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\u000a\u000a  ga('create', 'UA-54184553-1', 'auto');\u000a  ga('send', 'pageview');\u000a    </script>\u000a</head>\u000a<body class="post-template">\u000a\u000a    \u000a\u000a<nav class="main-nav clearfix">\u000a    <a class="back-button icon-arrow-left" href="http://blog.dutchcoders.io">Home</a>\u000a    <a class="subscribe-button icon-feed" href="http://blog.dutchcoders.io/rss/">Subscribe</a>\u000a</nav>\u000a\u000a<main class="content" role="main">\u000a\u000a    <article class="post">\u000a\u000a        <header class="post-header">\u000a            <h1 class="post-title">Using Scrapy and PyV8 to scrape inline javascript.</h1>\u000a            <section class="post-meta">\u000a                <time class="post-date" datetime="2014-08-31">31 August 2014</time> \u000a            </section>\u000a        </header>\u000a\u000a        <section class="post-content">\u000a            <p>When using Scrapy it is easy to scrape HTML using selectors, but when you are confronted with inline javascript objects in the html it is an other story.</p>\u000a\u000a<p>I'm using PyV8 to evaluate the imported scripts and inline javascript. The javascript objects in gistfile2.py allows the javascript libraries to access browser variables, like window, history and selectors. The functions I implemented are sufficient to run jQuery and other frameworks. This will work about the same in the Google crawler, where javascript is also being interpreted and evaluated.</p>\u000a\u000a<p>Warning: this is merely a proof of concept, than production ready code.</p>\u000a\u000a<p>First you need to download and install PyV8.</p>\u000a\u000a<p>Google V8 - <a href="http://code.google.com/p/v8/">http://code.google.com/p/v8/</a> <br />\u000aPyV8 - <a href="http://code.google.com/p/pyv8/">http://code.google.com/p/pyv8/</a></p>\u000a\u000a<p>This is the code of the scraper:  </p>\u000a\u000a<script src="https://gist.github.com/nl5887/b981b217338494682bf7.js?file=gistfile1.py"></script>\u000a\u000a<p>This code mimics the browser:  </p>\u000a\u000a<script src="https://gist.github.com/nl5887/b981b217338494682bf7.js?file=gistfile2.py"></script>\u000a\u000a<p>As you can see, it gets an page, creates a new context using the Global() and evaluates all script tags. If the script tag is remote, it downloads and runs it. The end result is that you can just call for objects within the page, in this case ProducsData and use it as an Python object.</p>\u000a\u000a<p>Work todo:</p>\u000a\u000a<ul>\u000a<li>make a nice library</li>\u000a<li>cache the evaluated context and downloaded scripts</li>\u000a<li>further enhance the browser mimicing.</li>\u000a</ul>\u000a        </section>\u000a\u000a        <footer class="post-footer">\u000a\u000a\u000a\u000a            <section class="author">\u000a                <h4><a href="/author/remco/">Remco</a></h4>\u000a\u000a                    <p>Read <a href="/author/remco/">more posts</a> by this author.</p>\u000a                <div class="author-meta">\u000a                    \u000a                    \u000a                </div>\u000a            </section>\u000a\u000a\u000a            <section class="share">\u000a                <h4>Share this post</h4>\u000a                <a class="icon-twitter" href="https://twitter.com/share?text=Using%20Scrapy%20and%20PyV8%20to%20scrape%20inline%20javascript.&amp;url=http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/"\u000a                    onclick="window.open(this.href, 'twitter-share', 'width=550,height=235');return false;">\u000a                    <span class="hidden">Twitter</span>\u000a                </a>\u000a                <a class="icon-facebook" href="https://www.facebook.com/sharer/sharer.php?u=http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/"\u000a                    onclick="window.open(this.href, 'facebook-share','width=580,height=296');return false;">\u000a                    <span class="hidden">Facebook</span>\u000a                </a>\u000a                <a class="icon-google-plus" href="https://plus.google.com/share?url=http://blog.dutchcoders.io/using-scrapy-and-pyv8-to-scrape-inline-javascript/"\u000a                   onclick="window.open(this.href, 'google-plus-share', 'width=490,height=530');return false;">\u000a                    <span class="hidden">Google+</span>\u000a                </a>\u000a            </section>\u000a\u000a        </footer>\u000a\u000a    <div id="disqus_thread"></div>\u000a    <script type="text/javascript">\u000a      (function() {\u000a       var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\u000a       dsq.src = 'http://dutchcoders.disqus.com/embed.js';\u000a       (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\u000a      })();\u000a    </script>\u000a    </article>\u000a\u000a</main>\u000a\u000a\u000a    <footer class="site-footer clearfix">\u000a         <section class="copyright"><a href="http://blog.dutchcoders.io">DutchCoders</a> &copy; 2016</section>\u000a         <section class="poweredby">Proudly published with <a href="https://ghost.org">Ghost</a></section>\u000a    </footer>\u000a\u000a    <!-- You can safely delete this line if your theme does not require jQuery -->\u000a<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>\u000a\u000a    <script type="text/javascript" src="/assets/js/jquery.fitvids.js?v=a5c1d8d951"></script>\u000a    <script type="text/javascript" src="/assets/js/index.js?v=a5c1d8d951"></script>\u000a\u000a</body>\u000a</html>\u000a
p3
a.