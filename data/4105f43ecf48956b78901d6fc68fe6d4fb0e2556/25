(lp0
S'http://people.arxnet.hu/airween/mysql_auth/'
p1
aS'mysql_auth readme'
p2
aI0
aV<HTML>\u000a<HEAD>\u000a<TITLE>mysql_auth readme</TITLE>\u000a<!--\u000a    this readme file was created based on readme.html of MSNT authenticator,\u000a    author Antonino Ianella\u000a-->\u000a<STYLE TYPE="text/css">\u000a	body {\u000a		background-color: white;\u000a		color: #505050;\u000a		font-family: Arial, Helvetica, sans-serif;\u000a		font-size: 14px;\u000a	}\u000a	a {\u000a		text-decoration: none;\u000a		color: #0069B3;\u000a	}\u000a	a:hover {\u000a		text-decoration: underline;\u000a	}\u000a	pre {\u000a		background-color: #DFDFDF;\u000a		padding: 10px;\u000a	}\u000a	\u000a	p.david {\u000a		font-size: 10px;\u000a	}\u000a</STYLE>\u000a</HEAD>\u000a<BODY>\u000a\u000a<H1>\u000amysql_auth v0.8<p class="david">Happy Birth'day, dear my son! :)</p><BR>\u000aSquid HTTP proxy MySQL authentication module<BR>\u000aErvin Hegedus<BR>\u000aWed Dec 13 23:00:00 CET 2004<BR>\u000a</H1>\u000a\u000a<H2>Contents</H2>\u000a\u000a<UL>\u000a<LI> <A HREF="#introduction">Introduction</A>\u000a<LI> <A HREF="#installation">Installation</A>\u000a<LI> <A HREF="#createdb">Create database</A>\u000a<LI> <A HREF="#compiling">Issues when compiling</A>\u000a<LI> <A HREF="#configuration">Configuration file</A>\u000a<LI> <A HREF="#squid">Squid.conf changes</A>\u000a<LI> <A HREF="#testing">Testing</A>\u000a<LI> <A HREF="#contact">Contact details</A>\u000a</UL>\u000a\u000a<A NAME="introduction"><H2>Introduction</H2></A>\u000a\u000a<P>\u000aThis is an authentication module for the Squid proxy server\u000ato authenticate users on an mysql database.\u000aThe database is a single table, and the table is a very\u000asimple user-password pair, with plain or encrypted passwords.\u000a\u000a<BR>\u000aThere is a utility, called by mypasswd. With this you can add a new user to your pasword database,\u000aupdate it or delete from. It uses the configuration file, what mysql_auth.\u000a\u000a<P>\u000aUsage is simple. It accepts a username and password on standard input.\u000aIt will return OK if the username/password is valid,\u000aor ERR if there was some problem.\u000aCheck syslog messages for reported problems.\u000a\u000a<P>\u000a<b>mypasswd</b> is also a very simple program: simply type mypasswd with no arguments, and it gives you\u000ahelp about itself. Note, these are the examples about it:\u000a<PRE>\u000ashell> mypasswd user password\u000a</PRE>\u000aadd a new user if it doesn't exist, or update its password.\u000aThis form of mypasswd also makes it:\u000a<PRE>\u000ashell> mypasswd user\u000aEnter NEW password:\u000aRe-enter NEW password:\u000aPassword record ADDED succesfully.\u000a</PRE>\u000aAnd you can delete a user from database, like this:\u000a<PRE>\u000ashell> mypasswd -d user\u000a</PRE>\u000a<!--<P>\u000a<b>mypasswd</b> has a CGI format, it is called by <b>mypasswd.cgi</b> Fom more info, please visit\u000athe <a href="http://people.arxnet.hu/airween/mypasswd/index.html">projects webpage</a>.\u000a</P> -->\u000amysql_auth is released under the GNU General Public License and\u000ais available from \u000a<A HREF="http://people.arxnet.hu/airween/mysql_auth/mysql_auth-0.8.tar.gz">http://people.arxnet.hu/airween/mysql_auth/</A>.\u000a<P>\u000aMysql_auth tested with MySQL 3.23, 4.0.XX, on Linux and FreeBSD os's.\u000a\u000a<A NAME="installation"><H2>Installation</H2></A>\u000a\u000a<P>\u000aMake any changes to the source code you need. For example, set up correctly place of configuration file.\u000aSee that in define.h.\u000a\u000a<P>\u000aReview the Makefile, and modify based on target platform or\u000asite requirements. Setting up the mysql.h header and libmysqlclients.a places. Setting up your squid user\u000aand group accounts, and squid root directory.<br>\u000a<B><FONT COLOR="RED">Setting up correctly the permissions of mysql_auth.conf (mode 600)!<BR>\u000aThis is very important! This file included a mysql account,\u000awith select, update, insert and delete privileges!</B>\u000a<BR>\u000a<B>\u000aAlso very important: if you use mysql.log, be very carefull! It contains all transactions!\u000aFor example:</FONT>\u000a<BR>\u000a<PRE>\u000a	52 Query       UPDATE data SET password = password ("1234") WHERE user LIKE 'airween'\u000a</PRE>\u000a</B>\u000a<P>\u000aAfter when you edit what you want, type 'make', then 'make install', then 'make clean'.\u000a\u000a<P>\u000a'Make install' will put 'mysql_auth' into\u000a/usr/local/squid/libexec default, and 'mysql_auth.conf' to /usr/local/squid/etc.\u000a\u000a<A NAME="createdb"><H2>Create database</H2></A>\u000a<P>\u000aFor store user and password pairs, you need a database, like mysql.\u000aIt is very simple, one-table database. For create it, you need to run\u000acreate_script from path/to/your/source/scripts directory.\u000a\u000a<P>\u000aYou can create it like this:\u000a<BR>\u000a<PRE>\u000ashell> cd path/to/mysql_auth-source/scripts\u000ashell> mysql -u your_user_name -p &lt; create_script\u000aEnter password: &lt;type your password&gt;\u000a</PRE>\u000aTo add a user:\u000a<PRE>\u000ashell> mysql -u your_user_name -p mysql_auth\u000aEnter password:\u000aWelcome message...\u000a\u000amysql> insert into data (user, password) values ('joeav', 'joespass');\u000aQuery OK, 1 row affected (0.00 sec)\u000a\u000amysql>\u000a</PRE>\u000aor if you want to store your passwords in encrypted format:\u000a<PRE>\u000ashell> mysql -u your_user_name -p mysql_auth\u000aEnter password:\u000aWelcome message...\u000a\u000amysql> insert into data (user, password) values ('joeav', password("joespass"));\u000aQuery OK, 1 row affected (0.00 sec)\u000a\u000amysql>\u000a</PRE>\u000a\u000aOr try mypasswd:\u000a<PRE>\u000ashell> mypasswd joeav joespass\u000a</PRE>\u000a\u000aThat's it!\u000a<P>\u000aNote: if you set up in mysql_auth.conf the encrypt_password_form to 'yes', <B>mypasswd</B> also\u000auses encrypt form.\u000a</P>\u000a<P>\u000aHopefully nobody has problems compiling mysql_auth, and create_script.\u000a\u000a<A NAME="compiling"><H2>Issues when compiling</H2></A>\u000a\u000a<P>\u000aThe Makefile uses the GCC compiler, and assumes that it is in the current PATH.\u000aMysql_auth is known to compile properly on Debian Linux 3.1\u000awithout problems. Other operating systems are untested,\u000abut use a recent copy of the GNU C compiler.\u000a<P>\u000aProblem occur, when you can't setting up mysql header and/or library correctly.<br>\u000aOther, if you use MySQL 4.0 or above, may be you need to use in CFLAGS <b>-lz</b> at last.\u000a\u000a<A NAME="configuration"><H2>Configuration file</H2></A>\u000a\u000a<P>\u000aMysql_auth uses a configuration file. It reads just every startup, not every query.\u000aThe file is /usr/local/squid/etc/mysql_auth.conf.\u000aIf this path needs to be changed, see define.h.\u000a\u000a<PRE>\u000a  #define CONFIG_FILE   "/usr/local/squid/etc/mysql_auth.conf"\u000a</PRE>\u000a\u000a<P>\u000aAn example configuration file is provided. It looks like\u000a\u000a<PRE>\u000ahostname	localhost\u000a# FQDN hostname or IP address.\u000a# if you use it on localhost, and don't use tcp-network to\u000a# connect it (use a UNIX socket), you have to set up the\u000a# mysqld_socket parameter - see below\u000a\u000auser		squid\u000a# mysql user name - mysql administrator sets up.\u000a\u000apassword	squid\u000a# password of mysql user - mysql administrator sets up.\u000a\u000adatabase	mysql_auth\u000a# mysql database on mysql server - a unique name.\u000a\u000amysqld_socket	/tmp/mysqld.sock\u000a# absolute path of mysql daemon socket\u000a# need it, if you use mysqld through UNIX socket, not INET socket\u000a# see skip-networking option in my.cnf, the main configuration file\u000a# of mysql\u000a\u000atable		data\u000a# table name in mysql database - contents two couloms, user and password.\u000a# The password store in plain or encrypt format, and of course, case sensitive.\u000a\u000auser_column     user\u000a# column name where username exists.\u000a\u000apassword_column password\u000a# password name where passwords exists.\u000a\u000aencrypt_password_form	no\u000a# if you want to store your passwords in encrypted form\u000a# this is case insensitive; 'YES' and 'yes' is same\u000a</PRE>\u000a<P>\u000aThese values are defaults, when you don't set other, mysql_auth wants to work with these.\u000a\u000a<P>\u000aAll comments start with '#'.\u000aEmpty line allowed.\u000a\u000a<P>\u000aWhen a user provides a username/password, mysql_auth querys from mysql server.\u000aIt stops after a user has been successfully authenticated.\u000aMake sure the server can be reached and\u000ais active, or else mysql_auth will return all with errors!\u000a\u000a<A NAME="squid"><H2>Squid.conf changes</H2></A>\u000a\u000a<P>\u000aRefer to Squid documentation for the required changes to squid.conf.\u000aYou will need to set the following lines to enable authentication for\u000ayour access list -\u000a\u000a<PRE>\u000a  acl &lt;yourACL&gt; proxy_auth REQUIRED\u000a  http_access allow password\u000a  http_access allow &lt;yourACL&gt;\u000a  http_access deny all\u000a</PRE>\u000a\u000a<P>\u000aYou will also need to review the following directives. The number of\u000amysql_auth children spawned is set with authenticate_children.\u000aThe number of children needed is site-dependent, so some\u000aexperimentation may be required to find the best number.\u000a\u000a<PRE>\u000a  auth_param basic realm Squid proxy server\u000a  auth_param basic program /usr/local/squid/libexec/mysql_auth\u000a  auth_param basic credentialsttl 5\u000a  auth_param basic children 5\u000a</PRE>\u000a\u000a<A NAME="testing"><H2>Testing</H2></A>\u000a\u000a<P>\u000aI strongly urge that mysql_auth is tested prior to being used in a \u000aproduction environment. It may behave differently on different platforms.\u000aTo test it, run it from the command line. Enter username and password\u000apairs separated by a space.\u000a\u000a<P>\u000aIt should behave in the following way -\u000a<PRE>\u000a - Press ENTER to get an OK or ERR message.\u000a - Make sure pressing CTRL-C aborts the program.\u000a - Test that entering no details does not result in an OK or ERR message.\u000a - Test that entering an invalid username and password results in\u000a   an ERR message.\u000a - Test that entering an valid username and password results in an OK message.\u000a</PRE>\u000a\u000a<P>\u000aUsernames cannot have whitespace in them, passwords can.\u000a</P>\u000a<P>\u000aIf you have any problem until you test it, see your <b>syslog</b> for details.\u000a\u000a<A NAME="contact"><H2>Contact details</H2></A>\u000a\u000a<P>\u000aTo contact the maintainer of this package, email Ervin Hegedus\u000aat <a href="mailto:airween@n.o.s.p.@.m.arxnet.hu">airween a.t arxnet d.o.t hu</a>.\u000a\u000a<P>\u000aAlso I have a nice mailing list:&nbsp;<a href="https://lists.fsn.hu/mailman/listinfo/mysql-auth">https://lists.fsn.hu/mailman/listinfo/mysql-auth</a>\u000a\u000a<P>\u000aGood Luck! :)\u000a</BODY>\u000a</HTML>\u000a
p3
a.