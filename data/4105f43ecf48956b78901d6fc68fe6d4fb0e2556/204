(lp0
S'http://javascript.info/tutorial/searching-elements-dom'
p1
aS'Searching elements in DOM | JavaScript Tutorial'
p2
aI0
aV<!DOCTYPE html>\u000a<html xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" dir="ltr" id="html-main">\u000a<head>\u000a<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>\u000a<meta http-equiv="X-UA-Compatible" content="IE=edge"/>\u000a<title>Searching elements in DOM | JavaScript Tutorial</title>\u000a<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>\u000a<meta property="fb:app_id" content="112959575461438"/>\u000a<link rel="prev" href="/tutorial/document-write"/>\u000a<link rel="up" href="/tutorial/dom"/>\u000a<link rel="next" href="/tutorial/more-references-forms-and-tables"/>\u000a<link rel="prev" href="/tutorial/document-write"/>\u000a<link rel="next" href="/tutorial/more-references-forms-and-tables"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/book/book.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/cck/theme/content-module.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/dhtml_menu/dhtml_menu.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/fbconnect/fbconnect.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/myutils/jquery.alerts.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/node/node.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/syntaxhighlighter/sh/styles/shCore.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/syntaxhighlighter/sh/styles/shThemeDefault.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/system/defaults.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/system/system.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/system/system-menus.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/user/user.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/cck/modules/fieldgroup/fieldgroup.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/modules/views/css/views.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/themes/analytic/style.css?E"/>\u000a<link type="text/css" rel="stylesheet" media="all" href="/themes/analytic/linkindication.css?E"/>\u000a<script type="text/javascript" src="/misc/jquery.js?E"></script>\u000a<script type="text/javascript" src="/misc/drupal.js?E"></script>\u000a<script type="text/javascript" src="/modules/dhtml_menu/dhtml_menu.js?E"></script>\u000a<script type="text/javascript" src="/modules/editor/user.js?E"></script>\u000a<script type="text/javascript" src="/modules/editor/hotkeys.js?E"></script>\u000a<script type="text/javascript" src="/modules/fbconnect/fbconnect.js?E"></script>\u000a<script type="text/javascript" src="/modules/mistype/mistype.js?E"></script>\u000a<script type="text/javascript" src="/modules/json_server/json_server.js?E"></script>\u000a<script type="text/javascript" src="/modules/myfilter/myfilter.js?E"></script>\u000a<script type="text/javascript" src="/modules/myutils/jquery.cookie.js?E"></script>\u000a<script type="text/javascript" src="/modules/myutils/jquery.alerts.js?E"></script>\u000a<script type="text/javascript" src="/modules/myutils/misc.js?E"></script>\u000a<script type="text/javascript" src="/modules/syntaxhighlighter/sh/scripts//syntaxhighlighter.min.js?E"></script>\u000a<script type="text/javascript">\u000a<!--//--><![CDATA[//><!--\u000ajQuery.extend(Drupal.settings, {"basePath":"\u005c/","dhtmlMenu":{"slide":"slide","clone":"clone"},"fbconnect":{"user_pictures":"allow","language_code":"en_US","app_id":"112959575461438","debug":1,"connect_js":"document.location.protocol + '\u005c/\u005c/connect.facebook.net\u005c/en_US\u005c/all.js'","loginout_mode":"manual","invite_name":"JavaScript Tutorial","fast_reg_mode":1,"fast_reg_autoname":0,"fbuid":null,"user":{"uid":0,"fbuid":null}},"baseurl":"http:\u005c/\u005c/javascript.info\u005c/"});\u000a//--><!]]>\u000a</script>\u000a<script type="text/javascript">\u000a<!--//--><![CDATA[//><!--\u000a\u000a  SyntaxHighlighter.config.clipboardSwf = '/modules/syntaxhighlighter/sh/scripts/clipboard.swf'\u000a  $(function() {\u000a    SyntaxHighlighter.highlight()\u000a    })\u000a  \u000a//--><!]]>\u000a</script>\u000a<script type="text/javascript"> </script>\u000a</head>\u000a<body class="body-main arial">\u000a \u000a<div class="make-it-center">\u000a \u000a<div id="logo-container">\u000a<div class="clear-block">\u000a<div id="logo-no-padding">\u000a<div id="logo-picture">\u000a<a href="/" style="text-decoration:none" title="Home"><h1 id="logo">JavaScript Tutorial</h1></a>\u000a</div>\u000a</div>\u000a<div id="top-links">\u000a<ul class="top-links-ul">\u000a<li><a href="/user?destination=%2Fnode%2F69">Log in</a></li>\u000a</ul>\u000a</div>\u000a</div>\u000a \u000a</div>\u000a \u000a<hr style="height:0;border:1px solid gray">\u000a \u000a<div class="column-2\u000ano-left-column\u000a">\u000a \u000a \u000a<div class="breadcrumb"><a href="/">Home</a> » <a href="/root">Tutorial</a> » <a href="/tutorial/browser">Document and Events</a> » <a href="/tutorial/dom">DOM </a></div>\u000a<div class="book-navigation book-navigation-upper" id="book-navigation-69">\u000a<div class="page-links clear-block">\u000a<a title="Go to previous page" class="page-previous" href="/tutorial/document-write">\u2039 Using document.write</a>\u000a<a title="Go to next page" class="page-next" href="/tutorial/more-references-forms-and-tables">More references in forms and tables \u203a</a>\u000a</div>\u000a</div>\u000a<h1 class="title">Searching elements in DOM</h1>  \u000a<div class="main-content-block">\u000a<div id="node" style="font-family:inherit" data-format="2" class="node node-nid-69">\u000a<div style="float:right">\u000a<a href="http://twitter.com/share" style="float:right" class="twitter-share-button" data-count="horizontal" data-via="iliakan">Tweet</a>\u000a<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>\u000a<div class="fb-social-like-widget"><fb:like href="http://javascript.info/tutorial/searching-elements-dom" send="false" layout="button_count" show_faces="false" width="" action="like" font="verdana" colorscheme="light"></fb:like></div> </div>\u000a<span class="submitted"><a href="/users/ilya-kantor">Ilya Kantor</a></span>\u000a<ol class="toc-full"><li><a href="/tutorial/searching-elements-dom#methods">Methods\u000a</a><ol><li><a href="/tutorial/searching-elements-dom#document-getelementbyid"><code>document.getElementById</code>\u000a</a><ol><li><a href="/tutorial/searching-elements-dom#implicit-id-valued-variables">Implicit <code>id</code>-valued variables\u000a</a></li></ol></li><li><a href="/tutorial/searching-elements-dom#document-node-getelementsbytagname"><code>document/node.getElementsByTagName</code>\u000a</a></li><li><a href="/tutorial/searching-elements-dom#limit-search-by-parent-element">Limit search by parent element\u000a</a></li><li><a href="/tutorial/searching-elements-dom#document-getelementsbyname"><code>document.getElementsByName</code>\u000a</a></li><li><a href="/tutorial/searching-elements-dom#document-node-getelementsbyclassname"><code>document/node.getElementsByClassName</code>\u000a</a></li><li><a href="/tutorial/searching-elements-dom#document-node-queryselector-queryselectorall"><code>document/node.querySelector</code>, <code>querySelectorAll</code>\u000a</a></li></ol></li><li><a href="/tutorial/searching-elements-dom#xpath-in-modern-browsers">XPath in modern browsers\u000a</a></li><li><a href="/tutorial/searching-elements-dom#query-results-are-alive">Query results are alive!\u000a</a></li><li><a href="/tutorial/searching-elements-dom#practice">Practice\u000a</a><ol><li><a href="/tutorial/searching-elements-dom#label-links">Label links\u000a</a></li><li><a href="/tutorial/searching-elements-dom#show-children-count">Show children count\u000a</a></li><li><a href="/tutorial/searching-elements-dom#more">More\u000a</a></li></ol></li><li><a href="/tutorial/searching-elements-dom#summary">Summary\u000a</a></li></ol>\u000a<div class="content clear-block node-book" id="content-container"> <p>Most of time, to react on user-triggered event, we need to find and modify elements on the page.</p>\u000a<p>The <code>childNodes</code>, <code>children</code> and other helper links are helpful, but they allow to move between adjacent elements only.</p>\u000a<p>Fortunately, there are more global ways to query DOM.</p>\u000a<h2 id="methods">Methods</h2>\u000a<h3 id="document-getelementbyid"><code>document.getElementById</code></h3>\u000a<p>A fastest way to obtain an element is to query it by <code>id</code>.</p>\u000a<p>The following example queries the <code>document</code> for a div with <code>id='info'</code>. It doesn&#8217;t matter where is the node in the document, it will be found.</p>\u000a<p><pre class="source brush:js; html-script:true;height:50;run:true" style="">\u000a&lt;body&gt;\u000a  &lt;div id="info"&gt;Info&lt;/div&gt;\u000a  &lt;script&gt;\u000a    var div = document.getElementById('info')\u000a    alert( div.innerHTML )\u000a  &lt;/script&gt;\u000a&lt;/body&gt;\u000a</pre></p>\u000a<p>Note, there can be only one element with certain <code>id</code> value. Of course, you can violate that and put many elements with same ids in the markup, but the behavior of <code>getElementById</code> in this case will be buggy and inconsistent across browsers. So it&#8217;s better to stick to standards and keep a single element with certain id.</p>\u000a<p>If no element is found, <code>null</code> is returned.</p>\u000a<h4 id="implicit-id-valued-variables">Implicit <code>id</code>-valued variables</h4>\u000a<p>All browsers implicitly create a variable for every id. </p>\u000a<p>For instance, run the following code. It will output &#8220;test&#8221;, because <code>a</code> is IE-generated reference to the element.</p>\u000a<p><pre class="source brush:js; html-script:true;run:true" style="">\u000a&lt;div id="a"&gt;test&lt;/div&gt;\u000a&lt;script&gt;\u000a  alert(a)\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>In Internet Explorer that may lead to errors, see the example below.<br/>\u000a<pre class="source brush:js; html-script:true;run:true" style="">\u000a&lt;div id="a"&gt;test&lt;/div&gt;\u000a&lt;script&gt;\u000a  a = 5 // (x)\u000a  alert(a)\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>If you run it <u>in IE</u>, it won&#8217;t work. Line (x) is erroneous, because:</p>\u000a<ol>\u000a<li><code>a</code> references the <code>DIV</code> (it&#8217;s ok).</li>\u000a<li>IE-generated referenes can&#8217;t be overwritten (ah, bad bad!).</li>\u000a</ol>\u000a<p>BUT it <strong>will</strong> work if you use <code>var a</code> instead of just <code>a</code>:</p>\u000a<p><pre class="source brush:js; html-script:true;run:true" style="">\u000a&lt;div id="a"&gt;test&lt;/div&gt;\u000a&lt;script&gt;\u000a  var a = 5 \u000a  alert(a) // all fine\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>Yeah. IE tought us another good practice.. And also, just for fun&#8230;</p>\u000a<p><div style="font-family:inherit" data-format="2"><div class="task task-nid-70">\u000a<div class="task-formulation"> <p>We know that <code>window</code> is a global object. JavaScript searches everything in <code><code>window</code></code> as the last resort.</p>\u000a<p>Then what is <code>window.window</code>, is it true that <code>window === window.window</code> ?</p>\u000a<p>Logically, it should be same, for consistency, but&#8230; Open solution to learn more and see why it is important.</p>\u000a</div>\u000a<span class="task-solution-open">Open solution</span>\u000a<div class="task-solution">\u000a<div class="task-solution-header">Solution</div>\u000a<p>In all browsers excepts IE, <code>window.window</code> is just a hooky way to reference.. well.. <code>window</code>. So <code>window === window.window</code>, true.</p>\u000a<p>And <code>window.window.window</code> is also the same as <code>window.window</code>.</p>\u000a<p>But in IE, top-level <code>window</code> is a special object with special features, while <code>window.window</code> is something closer to standard window object.</p>\u000a<p>You can check it out (in IE):</p>\u000a<p><pre class="source brush:js;run:true" style="">\u000aalert(window === window.window) // false\u000a  alert(window.window === window.window.window) // true\u000a</pre></p>\u000a<p>Why that may be important?</p>\u000a<p>There are features and bugs which happen if you use a variable <u>without</u> <code>var</code>, because IE uses own outer window object to handle it.</p>\u000a<p>Most notable are:</p>\u000a<ol>\u000a<li>reassigning a variable with same name as <code>id</code> of an element - IE will generate error:<br/>\u000a<pre class="source brush:js; html-script:true;run:true" style="">\u000a&lt;div id="a"&gt;...&lt;/div&gt;\u000a&lt;script&gt; \u000a  a = 5    // error in IE! Ok if "var a = 5"\u000a  alert(a) // will never happen\u000a&lt;/script&gt;\u000a</pre>\u000a</li>\u000a<li>recursion through outer window variable - the following code dies on IE&lt;9:<br/>\u000a<pre class="source brush:js; html-script:true;height:0;run:true" style="">\u000a&lt;script&gt;\u000a// recurse is explicitly defined on the outer window\u000awindow.recurse = function(times) {\u000a  if (times !== 0) recurse(times-1)\u000a}\u000a\u000arecurse(13)\u000a&lt;/script&gt;\u000a</pre>\u000a<p>The bug with recursion is fixed in IE9.\u000a</p></li>\u000a</ol>\u000a</div>\u000a</div></div></p>\u000a<h3 id="document-node-getelementsbytagname"><code>document/node.getElementsByTagName</code></h3>\u000a<p>This method searches all elements with given tagname and returns an array-like list of them. The case doesn&#8217;t matter.</p>\u000a<p><pre class="source brush:js;light:true" style="">\u000a// get all div elements\u000avar elements = document.getElementsByTagName('div')\u000a</pre></p>\u000a<p>The following example demonstrates how to obtain a list of all <code>INPUT</code> tags of the document and loop over results:</p>\u000a<p><pre class="source brush:js; html-script:true;height:50;run:true" style="">\u000a&lt;table id="myTable"&gt;\u000a  &lt;tr&gt;\u000a    &lt;td&gt;Your age:&lt;/td&gt;\u000a\u000a    &lt;td&gt;\u000a      &lt;label&gt;\u000a        &lt;input type="radio" name="age" value="young" checked/&gt; under 18\u000a      &lt;/label&gt;\u000a      &lt;label&gt;\u000a        &lt;input type="radio" name="age" value="mature"/&gt; from 18 to 50\u000a      &lt;/label&gt;\u000a      &lt;label&gt;\u000a        &lt;input type="radio" name="age" value="senior"/&gt; older than 60\u000a      &lt;/label&gt;\u000a    &lt;/td&gt;\u000a  &lt;/tr&gt;\u000a\u000a&lt;/table&gt;\u000a\u000a&lt;script&gt;\u000a*!*\u000a  var elements = document.getElementsByTagName('input')\u000a*/!*\u000a  for(var i=0; i&lt;elements.length; i++) {\u000a    var input = elements[i]  \u000a    alert(input.value+': '+input.checked)\u000a  }\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>It is also possible to get a first element by direct referencing:<br/>\u000a<pre class="source brush:js;light:true" style="">\u000avar element = document.getElementsByTagName('input')[0]\u000a</pre></p>\u000a<p>There is a way to get all elements by specifying <code>'<em>'</em></code> instead of the tag:<br/>\u000a<pre class="source brush:js;light:true" style="">\u000a// get all elements in the document\u000adocument.getElementsByTagName('*')\u000a</pre></p>\u000a<h3 id="limit-search-by-parent-element">Limit search by parent element</h3>\u000a<p><strong><code>getElementsByTagName</code> can be called on a document, but also on a DOM element.</strong></p>\u000a<p>The example below demonstrates that by calling <code>getElementsByTagName</code> inside another element:</p>\u000a<p><pre class="source brush:js; html-script:true;run:true" style="">\u000a&lt;ol id="people"&gt;\u000a  &lt;li&gt;John&lt;/li&gt;\u000a  &lt;li&gt;Rodger&lt;/li&gt;\u000a  &lt;li&gt;Hugo&lt;/li&gt;\u000a&lt;/ol&gt;\u000a&lt;script&gt;\u000a\u000a  var elem = document.getElementById('people')\u000a\u000a  var list = *!*elem.*/!*getElementsByTagName('li')\u000a  alert(list[0].innerHTML)\u000a\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p><strong>elem.getElementsByTagName(&#8216;li&#8217;) finds all <code>LI</code> inside <code>elem</code></strong>. The element before the dot is called *the searching context.</p>\u000a<h3 id="document-getelementsbyname"><code>document.getElementsByName</code></h3>\u000a<p>For elements <u>which support the <code>name</code> attribute</u>, it is possible to query them by name. </p>\u000a<p>In the example above, it was possible to use the code:<br/>\u000a<pre class="source brush:js;light:true" style="">\u000avar elements = document.getElementsByName('age')\u000a</pre></p>\u000a<h3 id="document-node-getelementsbyclassname"><code>document/node.getElementsByClassName</code></h3>\u000a<p>This method is supported in all modern browsers excluding IE&lt;9.</p>\u000a<p>It performs a search by class name, not attribute. In particlar, it understands multiple classes.</p>\u000a<p>The following example demonstrates how it finds an element using one of the classes.</p>\u000a<p>Please use other browser than IE&lt;9 to run it.</p>\u000a<p><pre class="source brush:js; html-script:true;height:50;run:true" style="">\u000a&lt;div class="a b c"&gt;Yep&lt;/div&gt;\u000a&lt;script&gt;\u000aalert( document.getElementsByClassName('a')[0].innerHTML )\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>Like <code>getElementsByTagName</code>, it can be called for a DOM element.</p>\u000a<h3 id="document-node-queryselector-queryselectorall"><code>document/node.querySelector</code>, <code>querySelectorAll</code></h3>\u000a<p>The methods <code>querySelector</code> and <code>querySelectorAll</code> allow to select elements by CSS 3 query.</p>\u000a<p>The <code>querySelector</code> returns only first element (in tree depth-first walking order), the <code>querySelectorAll</code> gets all of them.</p>\u000a<p>They work in all modern browsers including IE8+. There are limitations on IE support:</p>\u000a<ol>\u000a<li>IE8 must be in IE8-mode, not compatibility mode.</li>\u000a<li>It isn&#8217;t CSS 3, but is CSS 2.1 for IE. That&#8217;s less powerfull, but fine for most cases.</li>\u000a</ol>\u000a<p>The following query gets all <code>LI</code> elements that are last children and have <code>UL</code> as direct parent. It will work on IE8, because this site is rendered in IE8-mode.</p>\u000a<p><pre class="source brush:js; html-script:true;run:true" style="">\u000a&lt;ul&gt;\u000a  &lt;li&gt;The&lt;/li&gt;\u000a  &lt;li&gt;Test&lt;/li&gt;\u000a&lt;/ul&gt;\u000a&lt;ul&gt;\u000a  &lt;li&gt;Is&lt;/li&gt;\u000a  &lt;li&gt;Passed&lt;/li&gt;\u000a&lt;/ul&gt;\u000a&lt;script&gt;\u000a  var elements = document.querySelectorAll('UL &gt; LI:last-child')\u000a\u000a  for(var i=0; i&lt;elements.length; i++) {\u000a    alert(elements[i].innerHTML )\u000a  }\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>The <code>querySelector</code> is a shortcut for <code>querySelectorAll('...')[0]</code>.</p>\u000a<h2 id="xpath-in-modern-browsers">XPath in modern browsers</h2>\u000a<p>All modern browsers support powerful <a href="http://www.w3.org/TR/xpath/">XPath queries</a> which is a general DOM-searching tool from the world of XML. Most browsers can run them against HTML either.</p>\u000a<p>The following example demonstrates a generic non-IE syntax for finding all <code>H3</code> containing &#8216;XPath&#8217; using an XPath query:</p>\u000a<p><pre class="source brush:js;run:true" style="">\u000avar result = document.evaluate("//h3[contains(text(),'XPath')]", document.documentElement, null,                  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null)\u000a\u000afor (var i=0; i&lt;result.snapshotLength; i++) {\u000a    alert(result.snapshotItem(i).innerHTML)\u000a}\u000a</pre></p>\u000a<p>The only exception is IE(including 9) which supports it for XML document objects only. That&#8217;s fine for documents loaded from server with <code>XMLHTTPRequest</code> (AJAX), but to search in the document, you&#8217;ll need to explicitly load the page into an XML document object.</p>\u000a<p>In real-life <code>querySelector</code> can solve the task in a more convenient way, but it&#8217;s always good to keep various possibilities in mind. </p>\u000a<h2 id="query-results-are-alive">Query results are alive!</h2>\u000a<p>All DOM queries, which may match multiple elements, return an array-like collection with length and indexes. It is also possible too loop over it with <code>for</code>, just like an array.</p>\u000a<p>But indexes and the <code>length</code> property is actually the only similarities between <code>Array</code> and the returned collection of elements which has a special type <a href="http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-536297177">NodeList</a> or <a href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75708506">HTMLCollection</a>.</p>\u000a<p>So it doesn&#8217;t have <code>push</code>, <code>pop</code> and other properties of JavaScript array.</p>\u000a<p>But instead, this query result is alive for all <code>getElementsBy*</code> methods. When you select elements and modify the document - the query result is updated automatically.</p>\u000a<p>The folling example demonstrates how collection length changes when elements are removed.</p>\u000a<p><pre class="source brush:js; html-script:true;height:50;run:true" style="">\u000a&lt;div id="outer"&gt;\u000a  &lt;div id="inner"&gt;Info&lt;/div&gt;\u000a&lt;/div&gt;\u000a&lt;script&gt;\u000a  var outerDiv = document.getElementById('outer')\u000a  var divs = document.getElementsByTagName('div')\u000a\u000a  alert(divs.length) \u000a\u000a  outerDiv.innerHTML = '' // clear inner div\u000a\u000a  alert(divs.length)\u000a&lt;/script&gt;\u000a</pre></p>\u000a<p>The liveness applies to collections only. If you get a reference to the element, the reference will not become null. For example, the element <code>elem = document.getElementById('inner')</code> will persist after the <code>outer</code> div is cleared.</p>\u000a<p>Also, <code>querySelectorAll</code> is special here. For the sake of performance, it returns a non-live <code>NodeList</code>. That&#8217;s an exception of the general rule.</p>\u000a<h2 id="practice">Practice</h2>\u000a<p>Consider the following html:</p>\u000a<p><pre class="source brush:js; html-script:true" style="">\u000a&lt;!DOCTYPE HTML&gt;\u000a&lt;html&gt;\u000a&lt;body&gt;\u000a&lt;label&gt;The table&lt;/label&gt;\u000a\u000a&lt;form name="age-form"&gt;\u000a\u000a  &lt;table id="age-table"&gt;\u000a    &lt;tr&gt;\u000a      &lt;td id="age-header"&gt;Your age:&lt;/td&gt;\u000a      &lt;td&gt;\u000a        &lt;label&gt;\u000a          &lt;input type="radio" name="age" value="young"/&gt; under 18\u000a        &lt;/label&gt;\u000a        &lt;label&gt;\u000a          &lt;input type="radio" name="age" value="mature"/&gt; 18 to 50\u000a        &lt;/label&gt;\u000a        &lt;label&gt;\u000a          &lt;input type="radio" name="age" value="senior"/&gt; after 60\u000a        &lt;/label&gt;\u000a      &lt;/td&gt;\u000a    &lt;/tr&gt;\u000a  &lt;/table&gt;\u000a\u000a&lt;/form&gt;\u000a&lt;/body&gt;\u000a</pre></p>\u000a<p>Here are the tasks which base on the HTML above.</p>\u000a<p><div style="font-family:inherit" data-format="2"><div class="task task-nid-72">\u000a<div class="task-formulation"> <p>For the document <a href="/play/tutorial/browser/dom/searchTask.html" class="liplay" target="_blank">tutorial/browser/dom/searchTask.html</a>:</p>\u000a<p>Find all labels inside the table. The result should be an array (or pseudo-array) of labels.</p>\u000a</div>\u000a<span class="task-solution-open">Open solution</span>\u000a<div class="task-solution">\u000a<div class="task-solution-header">Solution</div>\u000a<p>The solution:<br/>\u000a<pre class="source brush:js;light:true" style="">\u000avar table = document.getElementById('age-table')\u000avar labels = table.getElementsByTagName('label')\u000a</pre></p>\u000a</div>\u000a</div></div><br/>\u000a<div style="font-family:inherit" data-format="2"><div class="task task-nid-71">\u000a<div class="task-formulation"> <p>For the document <a href="/play/tutorial/browser/dom/searchTask.html" class="liplay" target="_blank">tutorial/browser/dom/searchTask.html</a> </p>\u000a<p>Write a function <code>checkInsideTable(id)</code> which returns <code>true</code> if an element with given <code><code>id</code></code> is inside the table with <code>id="age-table"</code>.</p>\u000a<p>If there is no such element, it should return <code>false</code>.</p>\u000a<p>Like this:<br/>\u000a<pre class="source brush:js;light:true" style="">\u000acheckInsideTable('age-header')  // true\u000acheckInsideTable('top')         // false\u000acheckInsideTable('non-existant-id') // false\u000a</pre></p>\u000a</div>\u000a<span class="task-solution-open">Open solution</span>\u000a<div class="task-solution">\u000a<div class="task-solution-header">Solution</div>\u000a<p>First, we need to get the DOM element and table by id:<br/>\u000a<pre class="source brush:js;light:true" style="">\u000avar elem = document.getElementById(id)\u000avar table = document.getElementById('age-box')\u000a</pre></p>\u000a<p>Then we need to go through parent elements: <code>elem.parentNode</code>, <code>elem.parentNode.parentNode..</code> etc. Can be done in <code>while</code> loop until the next parent is <code>null</code>.</p>\u000a<p>The function can be written as follows:</p>\u000a<p><pre class="source brush:js" style="">\u000afunction checkInsideTable(id){\u000a  var elem = document.getElementById(id)\u000a  var table = document.getElementById('age-box')\u000a  \u000a  while (elem != table &amp;&amp; elem) {\u000a    elem = elem.parentNode\u000a  }\u000a  \u000a  return !!elem\u000a}\u000a</pre></p>\u000a<p>After <code>while</code> we have either <code>elem == table</code> or <code>elem == null</code>. So, getting a boolean value for <code>elem</code> gives the result.</p>\u000a</div>\u000a</div></div></p>\u000a<h3 id="label-links">Label links</h3>\u000a<p><div style="font-family:inherit" data-format="0"><div class="task task-nid-102">\u000a<div class="task-formulation"> <p>Make all external links yellow by giving them class &#8220;external&#8221;.<br/>\u000a<pre class="source brush:js; html-script:true;run:true;auto-links:false" style="">\u000a&lt;style&gt;\u000a.external { background-color: yellow }\u000a&lt;/style&gt;\u000a&lt;ul&gt;\u000a  &lt;li&gt;&lt;a href="http://google.com"&gt;http://google.com&lt;/a&gt;&lt;/li&gt;\u000a  &lt;li&gt;&lt;a href="/tutorial"&gt;/tutorial.html&lt;/a&gt;&lt;/li&gt;\u000a  &lt;li&gt;\u000a   &lt;a href="ftp://ftp.com/file.zip"&gt;ftp://ftp.com/file.zip&lt;/a&gt;\u000a  &lt;/li&gt;\u000a  &lt;li&gt;&lt;a href="http://nodejs.org"&gt;http://nodejs.org&lt;/a&gt;&lt;/li&gt;\u000a&lt;/ul&gt;\u000a</pre></p>\u000a<p>The result:<br/>\u000a<iframe onload="iframeResize(this)" frameborder="0" style="display:none;border:none" src="/files/tutorial/browser/dom/markLinks.html"></iframe></p>\u000a</div>\u000a<span class="task-hint-open">Open hint 1</span>\u000a<div class="task-hint">\u000a<div class="task-hint-header">Hint 1</div>\u000a</div>\u000a<span class="task-solution-open">Open solution</span>\u000a<div class="task-solution">\u000a<div class="task-solution-header">Solution</div>\u000a<p>The solution source: <a href="/play/tutorial/browser/dom/markLinks.html" class="liplay" target="_blank">tutorial/browser/dom/markLinks.html</a></p>\u000a<p>To skip links leading on current domain, <code>location.protocol</code> and <code>location.host</code> are used. They keep current scheme (http) and domain (JavaScript.info).</p>\u000a</div>\u000a</div></div></p>\u000a<h3 id="show-children-count">Show children count</h3>\u000a<p><div style="font-family:inherit" data-format="0"><div class="task task-nid-100">\u000a<div class="task-formulation"> <p>Here&#8217;s a tree: <a href="/play/tutorial/browser/dom/treeSource.html" class="liplay" target="_blank">tutorial/browser/dom/treeSource.html</a>. </p>\u000a<p>Write a code to add a bracketed descendants count to each list item (<code>LI</code>). Skip those <code>LI</code> which don&#8217;t have other list items inside.</p>\u000a<p>Put the code at the bottom of <code>BODY</code> so it runs during page rendering.</p>\u000a<p><iframe onload="iframeResize(this)" frameborder="0" style="display:none;border:none" src="/files/tutorial/browser/dom/tree.html"></iframe>. </p>\u000a</div>\u000a<span class="task-hint-open">Open hint 1</span>\u000a<div class="task-hint">\u000a<div class="task-hint-header">Hint 1</div>\u000a</div>\u000a<span class="task-hint-open">Open hint 2</span>\u000a<div class="task-hint">\u000a<div class="task-hint-header">Hint 2</div>\u000a</div>\u000a<span class="task-solution-open">Open solution</span>\u000a<div class="task-solution">\u000a<div class="task-solution-header">Solution</div>\u000a<p>Generally, it could be a good idea to modify the markup, so that title will be in a <code>&lt;span class="title"&gt;</code>, descendants count will have an element with it&#8217;s own class too etc. That could be good for applying CSS as well.</p>\u000a<p>But from the other side, the less tags - the faster it runs. There&#8217;s no silver bullet, only silver fork.<br/>\u000a<img src="/files/tutorial/browser/dom/silverfork.jpg" width="300" height="34"/></p>\u000a<p>The solution is here: <a href="/play/tutorial/browser/dom/tree.html" class="liplay" target="_blank">tutorial/browser/dom/tree.html</a>. </p>\u000a</div>\u000a</div></div></p>\u000a<h3 id="more">More</h3>\u000a<p><div style="font-family:inherit" data-format="0"><div class="task task-nid-310">\u000a<div class="task-formulation"> <p>For an arbitrary document, we do the following:<br/>\u000a<pre class="source brush:js" style="">\u000avar aList1 = document.getElementsByTagName('a'),\u000avar aList2 = document.querySelectorAll('a');\u000a\u000adocument.body.appendChild(document.createElement('a'));\u000a\u000aalert(aList1.length - aList2.length);\u000a</pre><br/>\u000aWhat will be the output? Why?</p>\u000a</div>\u000a<span class="task-solution-open">Open solution</span>\u000a<div class="task-solution">\u000a<div class="task-solution-header">Solution</div>\u000a<p>The output will be <code>1</code>, because <code>getElementsByTagName</code> is a <em>live</em> collection, which gets autopopulated with the new <code>a</code>. It&#8217;s length increases by 1.</p>\u000a<p>Contrary to this, <code>querySelector</code> returns a static list of nodes. It referenes same elements no matter what we do with the document. So, it&#8217;s length remains the same.</p>\u000a</div>\u000a</div></div></p>\u000a<h2 id="summary">Summary</h2>\u000a<p>There are 5 main ways of querying DOM:</p>\u000a<ol>\u000a<li><code>getElementById</code></li>\u000a<li><code>getElementsByTagName</code></li>\u000a<li><code>getElementsByName</code></li>\u000a<li><code>getElementsByClassName</code> (except IE&lt;9)</li>\u000a<li><code>querySelector</code> (except IE&lt;8 and IE8 in compat mode)</li>\u000a</ol>\u000a<p>All of them can search inside any other element. All of them excepts the last one return live collections.</p>\u000a<p>XPath is kind-of supported in most browsers, but very rarely used.</p>\u000a<div id="book-navigation-246" class="book-navigation">\u000a<div class="page-links clear-block">\u000a<a href="/tutorial/document-write" class="page-previous" title="Go to previous page">\u2039 Using document.write</a>\u000a<a title="Go to next page" class="page-next" href="/tutorial/more-references-forms-and-tables">More references in forms and tables \u203a</a>\u000a</div>\u000a</div>\u000a</div>\u000a<div style="clear:both"></div>\u000a</div>\u000a </div>\u000a \u000a </div>\u000a \u000a<div class="column-3"> <div class="block block-book" id="block-book-0">\u000a<h2 class="title"><a href="/root" class="book-title">Tutorial</a></h2> <div class="content"><ul class="menu"><li class="expanded first dhtml-menu  collapsed start-collapsed "><a href="/tutorial/basics" id="dhtml_menu-201">JavaScript: from the Ground to Closures</a><ul class="menu"><li class="expanded first dhtml-menu  collapsed start-collapsed "><a href="/tutorial/javascript-and-related-technologies" id="dhtml_menu-552">Javascript and related technologies</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/overview" id="dhtml_menu-207">Overview: JavaScript, Flash, Java, Silverlight and ActiveX</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/pre-coding" id="dhtml_menu-474">Pre-coding tips </a></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/first-steps" id="dhtml_menu-553">First Steps</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/setup-your-environment" id="dhtml_menu-233">Setup your environment</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/hello-world" id="dhtml_menu-234">Hello, World!</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/variables-and-statements" id="dhtml_menu-235">Variables and statements</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/development" id="dhtml_menu-587">Browser Developer&#039;s Tools</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/user-interaction-alert-prompt-and-confirm" id="dhtml_menu-476">User interaction: alert, prompt and confirm</a></li>\u000a<li class="expanded last dhtml-menu  collapsed start-collapsed "><a href="/tutorial/operators-and-constructs" id="dhtml_menu-271">Operators and constructs</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/operators" id="dhtml_menu-436">Operators</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/comparison-operators-ifelse" id="dhtml_menu-437">Comparison operators, if..else</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/loops-and-switch" id="dhtml_menu-438">Loops and switch</a></li>\u000a</ul></li>\u000a</ul></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/functions-declarations-and-expressions" id="dhtml_menu-304">Functions: declarations and expressions</a></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/mastering-data-types" id="dhtml_menu-238">Mastering data types</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/string" id="dhtml_menu-262">String</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/number-math" id="dhtml_menu-320">Number, Math</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/objects" id="dhtml_menu-322">Objects</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/array" id="dhtml_menu-321">Array</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/object-conversion" id="dhtml_menu-325">Conversion, toString and valueOf</a></li>\u000a</ul></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/this" id="dhtml_menu-631">Four scents of &quot;this&quot;</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/type-detection" id="dhtml_menu-582">Type detection </a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/arguments" id="dhtml_menu-554">Function arguments</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/static-variables-methods-decorators" id="dhtml_menu-577">Static variables and methods</a></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/advanced-functions" id="dhtml_menu-289">Scopes and Closures</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/initialization" id="dhtml_menu-323">Initialization of functions and variables</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/closures" id="dhtml_menu-621">Closures</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/with-operator" id="dhtml_menu-565">The &quot;with&quot; operator</a></li>\u000a</ul></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/decorators" id="dhtml_menu-633">Decorators</a></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  active-trail"><a href="/tutorial/browser" id="dhtml_menu-326">Document and Events</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/adding-script-html" id="dhtml_menu-574">Adding a script to HTML</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/browser-environment" id="dhtml_menu-329">Browser environment</a></li>\u000a<li class="expanded  dhtml-menu  active-trail"><a href="/tutorial/dom" id="dhtml_menu-428">DOM </a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/dom-nodes" id="dhtml_menu-457">DOM Nodes</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/traversing-dom" id="dhtml_menu-459">Traversing the DOM</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/basic-dom-node-properties" id="dhtml_menu-460">Basic DOM Node properties</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/attributes-and-custom-properties" id="dhtml_menu-462">Attributes and custom properties</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/modifying-document" id="dhtml_menu-465">Modifying the document</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/document-write" id="dhtml_menu-521">Using document.write</a></li>\u000a<li class="leaf  dhtml-menu  active-trail"><a href="/tutorial/searching-elements-dom" id="dhtml_menu-463" class="active">Searching elements in DOM</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/more-references-forms-and-tables" id="dhtml_menu-600">More references in forms and tables</a></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/view-and-position" id="dhtml_menu-478">View and position</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/styles-and-classes-getcomputedstyle" id="dhtml_menu-467">Styles and classes, getComputedStyle</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/re-introducing-css-positioning" id="dhtml_menu-477">Re-introducing CSS positioning</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/metrics" id="dhtml_menu-466">Metrics</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/coordinates" id="dhtml_menu-604">Coordinates</a></li>\u000a</ul></li>\u000a<li class="expanded last dhtml-menu  collapsed start-collapsed "><a href="/tutorial/events" id="dhtml_menu-480">Events</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/introduction-browser-events" id="dhtml_menu-328">Introduction into browser events</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/obtaining-event-object" id="dhtml_menu-601">Obtaining the event object</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/bubbling-and-capturing" id="dhtml_menu-602">Bubbling and capturing</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/default-browser-action" id="dhtml_menu-603">The default browser action</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/event-delegation" id="dhtml_menu-496">Event delegation </a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/mouse-events" id="dhtml_menu-482">Mouse events</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/focus-blur" id="dhtml_menu-495">Focus/Blur: methods and events</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/keyboard-events" id="dhtml_menu-497">Keyboard events</a></li>\u000a</ul></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/object-oriented-programming" id="dhtml_menu-566">Object Oriented Programming</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/inheritance" id="dhtml_menu-598">Prototypal inheritance </a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/native-prototypes" id="dhtml_menu-626">Extending Natives</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/constructor" id="dhtml_menu-625">The &quot;constructor&quot; property</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/instanceof" id="dhtml_menu-624">The &quot;instanceof&quot; operator</a></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/oop" id="dhtml_menu-614">OOP patterns</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/oop-concepts" id="dhtml_menu-488">General concepts </a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/pseudo-classical-pattern" id="dhtml_menu-613">Pseudo-classical pattern</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/all-one-constructor-pattern" id="dhtml_menu-615">All-in-one constructor pattern</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/factory-constructor-pattern" id="dhtml_menu-617">Factory constructor pattern</a></li>\u000a</ul></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/binding" id="dhtml_menu-616">Early and Late Binding</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/exceptions" id="dhtml_menu-561">Exceptions</a></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/timing" id="dhtml_menu-609">Timing</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/datetime-functions" id="dhtml_menu-522">Date/Time functions</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/settimeout-setinterval" id="dhtml_menu-567">Understanding timers: setTimeout and setInterval </a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/events-and-timing-depth" id="dhtml_menu-568">Events and timing in-depth \u6df1\u5165\u4e8b\u4ef6\u548c\u5b9a\u65f6\u673a\u5236</a></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/frames-and-windows" id="dhtml_menu-555">Frames and windows</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/popup-windows" id="dhtml_menu-557">Popup windows</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/browser-window-properties-and-methods" id="dhtml_menu-560">Browser window properties and methods</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/focus" id="dhtml_menu-563">Focus/blur methods and events</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/frames-and-iframes" id="dhtml_menu-556">Frames and iframes</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/same-origin-security-policy" id="dhtml_menu-558">The &quot;Same Origin&quot; security policy</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/cross-window-messaging-with-postmessage" id="dhtml_menu-559">Cross-window messaging with postMessage</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/clickjacking" id="dhtml_menu-564">The Clickjacking attack, X-Frame-Options</a></li>\u000a</ul></li>\u000a<li class="expanded  dhtml-menu  collapsed start-collapsed "><a href="/tutorial/regular-expressions-javascript" id="dhtml_menu-585">Regular expressions in JavaScript</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/regexp-introduction" id="dhtml_menu-589">Introduction</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/character-classes" id="dhtml_menu-584">Character classes</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/special-characters" id="dhtml_menu-586">Special characters</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/flags" id="dhtml_menu-590">Flags</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/character-sets-and-ranges" id="dhtml_menu-588">Character sets and ranges</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/numeric-quantifiers" id="dhtml_menu-591">Numeric Quantifiers</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/quantifiers-and" id="dhtml_menu-618">Quantifiers +, * and ?</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/greedy-and-lazy" id="dhtml_menu-592">Greedy and Lazy</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/ahchors-and-multiline-mode" id="dhtml_menu-593">Ahchors and multiline mode</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/word-boundary" id="dhtml_menu-619">Word boundary</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/infinite-backtracking-problem" id="dhtml_menu-628">Infinite backtracking problem</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/groups" id="dhtml_menu-595">Groups</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/alternation" id="dhtml_menu-594">Alternation </a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/regular-expressions-methods" id="dhtml_menu-620">Regular expressions methods </a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/practice" id="dhtml_menu-627">Practice </a></li>\u000a</ul></li>\u000a<li class="expanded last dhtml-menu  collapsed start-collapsed "><a href="/tutorial/advanced-and-extra-stuff" id="dhtml_menu-623">Advanced and Extra stuff</a><ul class="menu"><li class="leaf first dhtml-menu "><a href="/tutorial/onload-ondomcontentloaded" id="dhtml_menu-519">onLoad and onDOMContentLoaded</a></li>\u000a<li class="leaf  dhtml-menu "><a href="/tutorial/animation" id="dhtml_menu-605">Animation</a></li>\u000a<li class="leaf last dhtml-menu "><a href="/tutorial/memory-leaks" id="dhtml_menu-622">Memory leaks</a></li>\u000a</ul></li>\u000a</ul></div>\u000a</div>\u000a</div>\u000a \u000a \u000a<div id="footer" class="clear-block">\u000a<div class="clear-both">\u000a<p>The content of this site is available under the terms of <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed">CC BY-NC-SA</a>. </p>\u000a<p>&copy; Ilya Kantor, 2011.</p>\u000a<div id="tm" style="margin-top:5px;font-size:1.1em">"JavaScript&trade; is a registered trademark of Oracle corp. This site is not affiliated with Oracle corp.</div>\u000a<div id="fb-root"></div><script type="text/javascript">\u000a     window.fbAsyncInit = function() {\u000a       FB.init({\u000a         appId: "112959575461438",\u000a         status: true, \u000a         cookie: true,\u000a         xfbml: true,\u000a         channelUrl: "http:\u005c/\u005c/javascript.info\u005c/fb_social\u005c/channel",\u000a       });\u000a       \u000a       \u000a       \u000a         \u000a     };\u000a     (function() {\u000a       var e = document.createElement('script'); \u000a       e.async = true;\u000a       e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js';\u000a       document.getElementById('fb-root').appendChild(e);\u000a     }());\u000a  </script> </div>\u000a</div>\u000a \u000a<script>\u000a\u000a    var _gaq = window._gaq = [];\u000a    _gaq.push(["_addOrganic", "go.mail.ru","q"]);\u000a    _gaq.push(["_addOrganic", "nova.rambler.ru","query"]);\u000a    _gaq.push(["_addOrganic", "nigma.ru", "s"]);\u000a    _gaq.push(["_addOrganic", "blogs.yandex.ru", "text", true]);\u000a    _gaq.push(["_addOrganic", "webalta.ru", "q"]);\u000a    _gaq.push(["_addOrganic", "aport.ru", "r"]);\u000a    _gaq.push(["_addOrganic", "akavita.by", "z"]);\u000a    _gaq.push(["_addOrganic", "meta.ua", "q"]);\u000a    _gaq.push(["_addOrganic", "bigmir.net", "q"]);\u000a    _gaq.push(["_addOrganic", "tut.by", "query"]);\u000a    _gaq.push(["_addOrganic", "all.by", "query"]);\u000a    _gaq.push(["_addOrganic", "i.ua", "q"]);\u000a    _gaq.push(["_addOrganic", "online.ua", "q"]);\u000a    _gaq.push(["_addOrganic", "a.ua", "s"]);\u000a    _gaq.push(["_addOrganic", "ukr.net", "search_query"]);\u000a    _gaq.push(["_addOrganic", "search.com.ua", "q"]);\u000a    _gaq.push(["_addOrganic", "search.ua", "query"]);\u000a    _gaq.push(["_addOrganic", "poisk.ru", "text"]);\u000a    _gaq.push(["_addOrganic", "km.ru", "sq"]);\u000a    _gaq.push(["_addOrganic", "liveinternet.ru", "ask"]);\u000a    _gaq.push(["_addOrganic", "quintura.ru", "request"]);\u000a    _gaq.push(["_addOrganic", "search.qip.ru","query"]);\u000a    _gaq.push(["_addOrganic", "gde.ru","keywords"]);\u000a    _gaq.push(["_addOrganic", "search.ukr.net","search_query"]);\u000a    _gaq.push(["_addOrganic", "gogo.ru","q"]);\u000a\u000a    _gaq.push(['_setAccount', 'UA-2056213-15']);\u000a    _gaq.push(['_trackPageview']);\u000a\u000a    (function() {\u000a        var ga = document.createElement('script');\u000a        ga.async = true;\u000a        ga.src = 'http://google-analytics.com/ga.js';\u000a        var s = document.getElementsByTagName('script')[0];\u000a        s.parentNode.insertBefore(ga, s);\u000a    })();\u000a\u000a</script>\u000a</div>\u000a \u000a</body>\u000a</html>\u000a
p3
a.